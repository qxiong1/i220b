Script started on 2019-10-31 15:35:49-04:00 [TERM="xterm-256color" TTY="/dev/pts/7" COLUMNS="80" LINES="24"]
qxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ [Kqxiong1@remote04:~/i220b/work/lab11$ time ls ~/csaa[K[K220/labs/lab11/files
coverage  int-search  matmul-cache  parity

real	0m0.006s
user	0m0.002s
sys	0m0.000s
qxiong1@remote04:~/i220b/work/lab11$ time sleep 45[K[K5

real	0m5.003s
user	0m0.001s
sys	0m0.000s
qxiong1@remote04:~/i220b/work/lab11$ time wc -l 'find /etc -type[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Ktime wc -l 'find .[K/etc -type f 2>/deve[K/null\[K`  2>d[K/dev/null | tail
> 
> time wc -l 'find /etc -type f 2>/dev/null` 2>/dev/null | tail
[A
> 
> time wc -l 'find /etc -type f 2>/dev/null` 2>/dev/null | tail

time wc -l 'find /etc -type f 2>/dev/null` 2>/dev/null | tail

[A[A[A[A[C[C[C[C[C[C[Csleep 5[K
[K
[K
[K
[K[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls ~/cs220/labs/lab11/files[C[C[17Pobjdump -d bomb[C[C[10Pclear[C[Cobjdump -d bomb[C[Ctime ls ~/cs220/labs/lab11/files
> 
> 
> time wc -l 'find /etc -type f 2>/dev/null` 2>/dev/null | tail

time wc -l 'find /etc -type f 2>/dev/null` 2>/dev/null | tail


time ls ~/cs220/labs/lab11/files

[A[A[A[A[A[A[A[C[C[C[C[C[C[Csleep 5[K
[K
[K
[K
[K
[K
[K
[K[A[A[A[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C^C
qxiong1@remote04:~/i220b/work/lab11$ clear
[H[2J[3Jqxiong1@remote04:~/i220b/work/lab11$ cd parity/
qxiong1@remote04:~/i220b/work/lab11/parity$ vim main.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;22r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[22;1H"main.c" 21L, 480C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[35m#define DEBUG_OPT  [m[31m"-d"[m

[32mint[m parity_tests([32mint[m nTests, [32mint[m doDebug);

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m nTests = -[31m1[m;
  [38;5;130mif[m (argc == [31m1[m || argc > [31m3[m ||[14;7H(argc == [31m3[m && strcmp(argv[[31m1[m], DEBUG_OPT) != [31m0[m) ||[15;7H((nTests = atoi(argv[argc - [31m1[m])) <= [31m0[m)) {
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m [[m[35m%s[m[31m] NUM_TESTS[m[35m\n[m[31m"[m, argv[[31m0[m], DEBUG_OPT);
    exit([31m1[m);
  }
  printf([31m"[m[35m%d\n[m[31m"[m, parity_tests(nTests, argc == [31m3[m));
  [38;5;130mreturn[m [31m0[m;
}[22;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}[22;63H1,1[11CAll"main.c" 21L, 480C[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [m[23;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [m[24;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [m[25;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [m[30;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [m[32;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [m[36;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [m[40;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [m[43;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [m[44;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [m[43;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [m[42;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [m[41;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [m[40;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [m[39;63H1,1[11CAll[1;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#define DEBUG_OPT  [m[95m"-d"[m

[38;5;121mint[m parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug);

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [93mif[m (argc == [95m1[m || argc > [95m3[m ||[14;7H(argc == [95m3[m && strcmp(argv[[95m1[m], DEBUG_OPT) != [95m0[m) ||[15;7H((nTests = atoi(argv[argc - [95m1[m])) <= [95m0[m)) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m [[m[38;5;224m%s[m[95m] NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m], DEBUG_OPT);
    exit([95m1[m);
  }
  printf([95m"[m[38;5;224m%d\n[m[95m"[m, parity_tests(nTests, argc == [95m3[m));
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll[1;1H[?25h[?25l[38;53H:[1;1H[38;53H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/parity$ vim parity-c.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"parity-c.c" 24L, 485C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mint[m
parity_tests([32mint[m nTests, [32mint[m doDebug)
{
  [32mint[m sum = [31m0[m;
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nTests; i++) {
    [32mint[m value = rand() & (doDebug ? [31m0xFF[m : ~[31m0[m);
    [34m//open code count-1s routine[m
    [32mint[m v = value;
    [32mint[m nOnes = [31m0[m;
    [38;5;130mwhile[m (v != [31m0[m) {[14;7Hv &= (v - [31m1[m);[15;7HnOnes++;
    }
    [32mint[m isEvenParity = (nOnes & [31m1[m) == [31m0[m;
    [38;5;130mif[m (doDebug) {[19;7Hfprintf([31mstderr[m, [31m"[m[35m%x[m[31m: [m[35m%d\n[m[31m"[m, value, isEvenParity);
    }
    sum += isEvenParity;
  }
  [38;5;130mreturn[m sum;
}
[94m~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[38;5;121mint[m
parity_tests([38;5;121mint[m nTests, [38;5;121mint[m doDebug)
{
  [38;5;121mint[m sum = [95m0[m;
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nTests; i++) {
    [38;5;121mint[m value = rand() & (doDebug ? [95m0xFF[m : ~[95m0[m);
    [96m//open code count-1s routine[m
    [38;5;121mint[m v = value;
    [38;5;121mint[m nOnes = [95m0[m;
    [93mwhile[m (v != [95m0[m) {[14;7Hv &= (v - [95m1[m);[15;7HnOnes++;
    }
    [38;5;121mint[m isEvenParity = (nOnes & [95m1[m) == [95m0[m;
    [93mif[m (doDebug) {[19;7Hfprintf([95mstderr[m, [95m"[m[38;5;224m%x[m[95m: [m[38;5;224m%d\n[m[95m"[m, value, isEvenParity);
    }
    sum += isEvenParity;
  }
  [93mreturn[m sum;
}
[94m~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll"parity-c.c" 24L, 485C[1;1H[?25h[?25l[6;1H[46m{[24;1H}[m[38;63H24,1[24;1H[?25h[?25l[38;53H:[24;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/parity$ ls
main.c	Makefile  parity-c.c  parity-s.c
qxiong1@remote04:~/i220b/work/lab11/parity$ make
cc -g -Wall -std=c11 -O1   -c -o parity-c.o parity-c.c
cc -g -Wall -std=c11 -O1   -c -o main.o main.c
cc   parity-c.o main.o   -o parity-c
cc -g -Wall -std=c11 -O1   -c -o parity-s.o parity-s.c
cc   parity-s.o main.o   -o parity-s
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c -d 10
67: 0
c6: 1
69: 1
73: 0
51: 0
ff: 1
4a: 0
ec: 0
29: 0
cd: 0
3
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c -d 10[C[1P[1@s
67: 0
c6: 1
69: 1
73: 0
51: 0
ff: 1
4a: 0
ec: 0
29: 0
cd: 0
3
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-s -d 10[1P 10[1P 10[1P10
3
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-s 10-d 10[C[C[C[1P 10[1P 10[1P10[1P 10c 10
3
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c 10[C[C[K[K[K
usage: ./parity-c [-d] NUM_TESTS
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c d 100
usage: ./parity-c [-d] NUM_TESTS
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c d 100[K./parity-c d 100[1@-
67: 0
c6: 1
69: 1
73: 0
51: 0
ff: 1
4a: 0
ec: 0
29: 0
cd: 0
ba: 0
ab: 0
f2: 0
fb: 0
e3: 0
46: 0
7c: 0
c2: 0
54: 0
f8: 0
1b: 1
e8: 1
e7: 1
8d: 1
76: 0
5a: 1
2e: 1
63: 1
33: 1
9f: 1
c9: 1
9a: 1
66: 1
32: 0
d: 0
b7: 1
31: 0
58: 0
a3: 1
5a: 1
25: 0
5d: 0
5: 1
17: 1
58: 0
e9: 0
5e: 0
d4: 1
ab: 0
b2: 1
cd: 0
c6: 1
9b: 0
b4: 1
54: 0
11: 1
e: 0
82: 1
74: 1
41: 1
21: 1
3d: 0
dc: 0
87: 1
70: 0
e9: 0
3e: 0
a1: 0
41: 1
e1: 1
fc: 1
67: 0
3e: 0
1: 0
7e: 1
97: 0
ea: 0
dc: 0
6b: 0
96: 1
8f: 0
38: 0
5c: 1
2a: 0
ec: 0
b0: 0
3b: 0
fb: 0
32: 0
af: 1
3c: 1
54: 0
ec: 0
18: 1
db: 1
5c: 1
2: 0
1a: 0
fe: 0
43: 0
41
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c -d 100[1P 100[1P 100[1P100
38
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c 1000000
500043
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c 10000000
5000346
qxiong1@remote04:~/i220b/work/lab11/parity$ ./parity-c 100000000
50003700
qxiong1@remote04:~/i220b/work/lab11/parity$ cd ..
qxiong1@remote04:~/i220b/work/lab11$ cd matmul-cache/
qxiong1@remote04:~/i220b/work/lab11/matmul-cache$ vim main.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"main.c" 58L, 1269C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#define _XOPEN_SOURCE [m[31m1[m

[35m#include [m[31m<errno.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[35m#include [m[31m"matmul.h"[m

[32mstatic[m [32mvoid[m
initMatrix([32mint[m n, [32mdouble[m matrix[][n])
{
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [38;5;130mfor[m ([32mint[m j = [31m0[m; j < n; j++) {[15;7Hmatrix[i][j] = lrand48();
    }
  }
}

[32mstatic[m [32mvoid[m
out_matrix([32mint[m n, [32mdouble[m a[][n])
{
  [32mFILE[m *out = [31mstdout[m;
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [38;5;130mfor[m ([32mint[m j = [31m0[m; j < n; j++) {[26;7Hfprintf(out, [31m"[m[35m%8g[m[31m "[m, a[i][j]);
    }
    fprintf(out, [31m"[m[35m\n[m[31m"[m);
  }
}

[32menum[m { MAX_TEST_MATRIX_SIZE = [31m6[m };

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m matrixSize = -[31m1[m;[38;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#define _XOPEN_SOURCE [m[95m1[m

[38;5;81m#include [m[95m<errno.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[38;5;81m#include [m[95m"matmul.h"[m

[38;5;121mstatic[m [38;5;121mvoid[m
initMatrix([38;5;121mint[m n, [38;5;121mdouble[m matrix[][n])
{
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < n; i++) {
    [93mfor[m ([38;5;121mint[m j = [95m0[m; j < n; j++) {[15;7Hmatrix[i][j] = lrand48();
    }
  }
}

[38;5;121mstatic[m [38;5;121mvoid[m
out_matrix([38;5;121mint[m n, [38;5;121mdouble[m a[][n])
{
  [38;5;121mFILE[m *out = [95mstdout[m;
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < n; i++) {
    [93mfor[m ([38;5;121mint[m j = [95m0[m; j < n; j++) {[26;7Hfprintf(out, [95m"[m[38;5;224m%8g[m[95m "[m, a[i][j]);
    }
    fprintf(out, [95m"[m[38;5;224m\n[m[95m"[m);
  }
}

[38;5;121menum[m { MAX_TEST_MATRIX_SIZE = [95m6[m };

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m matrixSize = -[95m1[m;[38;63H1,1[11CTop"main.c" 58L, 1269C[1;1H[?25h[?25l[38;53H:[1;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/matmul-cache$ vim simp
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"simp" [New File][2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H0,0-1[9CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H0,0-1[9CAll"simp" [New File][1;1H[?25h[?25l[38;53H:[1;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/matmul-cache$ vim simple-matmul.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"simple-matmul.c" 15L, 267C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"matmul.h"[m

[32mvoid[m
matrix_multiply([32mint[m n, [32mdouble[m a[][n], [32mdouble[m b[][n], [32mdouble[m c[][n])
{
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [38;5;130mfor[m ([32mint[m j = [31m0[m; j < n; j++) {[8;7Hc[i][j] = [31m0[m;[9;7H[38;5;130mfor[m ([32mint[m k = [31m0[m; k < n; k++) {[10;9Hc[i][j] += a[i][k]*b[k][j];[11;7H}
    }
  }
}

[94m~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"matmul.h"[m

[38;5;121mvoid[m
matrix_multiply([38;5;121mint[m n, [38;5;121mdouble[m a[][n], [38;5;121mdouble[m b[][n], [38;5;121mdouble[m c[][n])
{
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < n; i++) {
    [93mfor[m ([38;5;121mint[m j = [95m0[m; j < n; j++) {[8;7Hc[i][j] = [95m0[m;[9;7H[93mfor[m ([38;5;121mint[m k = [95m0[m; k < n; k++) {[10;9Hc[i][j] += a[i][k]*b[k][j];[11;7H}
    }
  }
}

[94m~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll"simple-matmul.c" 15L, 267C[1;1H[?25h[?25l[7;33H[46m{[12;5H}[m[38;64H2,5[12;5H[?25h[?25l[38;53H:[12;5H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/matmul-cache$ vim transpose-matmul.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"transpose-matmul.c" 36L, 779C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"matmul.h"[m

[35m#include [m[31m<errno.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[34m/** Fill in matrix t[n][n] as the transpose of matrix a[n][n].  That is,
 *  for all i, j set t[i][j] to a[j][i].
 */[m
[32mstatic[m [32mvoid[m
matrix_transpose([32mint[m n, [32mdouble[m a[][n], [32mdouble[m t[][n])
{
  [34m//@[m[30m[103mTODO[m[34m add your code here[m
}


[32mvoid[m
matrix_multiply([32mint[m n, [32mdouble[m a[][n], [32mdouble[m b[][n], [32mdouble[m c[][n])
{
  [32mdouble[m (*tmp)[n] = malloc([38;5;130msizeof[m([32mdouble[m[n][n]));
  [38;5;130mif[m (!tmp) {
    fprintf([31mstderr[m, [31m"could not malloc transpose matrix: [m[35m%s\n[m[31m"[m,[24;13Hstrerror(errno));
    exit([31m1[m);
  }
  matrix_transpose(n, b, tmp);
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [38;5;130mfor[m ([32mint[m j = [31m0[m; j < n; j++) {[30;7Hc[i][j] = [31m0[m;[31;7H[38;5;130mfor[m ([32mint[m k = [31m0[m; k < n; k++) {[32;9Hc[i][j] += a[i][k]*tmp[j][k];[33;7H}
    }
  }
}
[94m~                                                                               [m[38;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"matmul.h"[m

[38;5;81m#include [m[95m<errno.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m
[38;5;81m#include [m[95m<string.h>[m

[96m/** Fill in matrix t[n][n] as the transpose of matrix a[n][n].  That is,
 *  for all i, j set t[i][j] to a[j][i].
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
matrix_transpose([38;5;121mint[m n, [38;5;121mdouble[m a[][n], [38;5;121mdouble[m t[][n])
{
  [96m//@[m[30m[103mTODO[m[96m add your code here[m
}


[38;5;121mvoid[m
matrix_multiply([38;5;121mint[m n, [38;5;121mdouble[m a[][n], [38;5;121mdouble[m b[][n], [38;5;121mdouble[m c[][n])
{
  [38;5;121mdouble[m (*tmp)[n] = malloc([93msizeof[m([38;5;121mdouble[m[n][n]));
  [93mif[m (!tmp) {
    fprintf([95mstderr[m, [95m"could not malloc transpose matrix: [m[38;5;224m%s\n[m[95m"[m,[24;13Hstrerror(errno));
    exit([95m1[m);
  }
  matrix_transpose(n, b, tmp);
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < n; i++) {
    [93mfor[m ([38;5;121mint[m j = [95m0[m; j < n; j++) {[30;7Hc[i][j] = [95m0[m;[31;7H[93mfor[m ([38;5;121mint[m k = [95m0[m; k < n; k++) {[32;9Hc[i][j] += a[i][k]*tmp[j][k];[33;7H}
    }
  }
}
[94m~                                                                               [m[38;63H1,1[11CAll"transpose-matmul.c" 36L, 779C[1;1H[?25h[?25l[38;53H:[1;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/matmul-cache$ make
cc -g -Wall -std=c11 -O1   -c -o main.o main.c
cc -g -Wall -std=c11 -O1   -c -o simple-matmul.o simple-matmul.c
cc main.o simple-matmul.o  -o simple-matmul
cc -g -Wall -std=c11 -O1   -c -o transpose-matmul.o transpose-matmul.c
cc main.o transpose-matmul.o  -o transpose-matmul
qxiong1@remote04:~/i220b/work/lab11/matmul-cache$ ./simple-matmul 4 1
2.22116e+17 7.02729e+17 9.76657e+17 2.08306e+17 
2.17616e+18 2.16772e+18 3.40213e+18 1.2273e+18 
4.86494e+18 4.48803e+18 7.27046e+18 2.8719e+18 
7.68709e+18 2.14813e+18 5.99903e+18 4.12269e+18 
qxiong1@remote04:~/i220b/work/lab11/matmul-cache$ ./simple-matmul 4 1[K./transpose-matmul 4 1
       0        0        0        0 
       0        0        0        0 
       0        0        0        0 
       0        0        0        0 
qxiong1@remote04:~/i220b/work/lab11/matmul-cache$ vim simple-matmul
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"simple-matmul" [noeol][converted] 32L, 27835C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m^?[mELF[34m^B^A^A^@^@^@^@^@^@^@^@^@^C^@[m>[34m^@^A^@^@^@[mÀ[34m^P^@^@^@^@^@^@[m@[34m^@^@^@^@^@^@^@[mp^[34m^@^@@[2;1H^@^@^@^@^@^@^@^@[m@[34m^@[m8[34m^@^K^@[m@[34m^@[m%[34m^@[m$[34m^@^F^@^@^@^D^@^@^@[m@[34m^@^@^@^@^@^@^@[m@[34m^@^@^@^@^@^@^^[3;1H@[m@[34m^@^@^@^@^@^@^@[mh[34m^B^@^@^@^@^@^@[mh[34m^B^@^@^@^@^@^@^H^@^@^@^@^@^@^@^C^@^@^@^D^@^@^@[m¨[3;80H[34m^^[4;1HB^@^@^@^@^@^@[m¨[4;15H[34m^B^@^@^@^@^@^@[m¨[4;30H[34m^B^@^@^@^@^@^@^\^@^@^@^@^@^@^@^\^@^@^@^@^@^@^@^A^@^^[5;1H@^@^@^@^@^@^A^@^@^@^D^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mx[34m^G^@@[6;1H^@^@^@^@^@[mx[34m^G^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^E^@^@^@^@^P^@^@^@^@^@^@^@^P^@^^[7;1H@^@^@^@^@^@^P^@^@^@^@^@^@[mí[7;27H[34m^D^@^@^@^@^@^@[mí[7;42H[34m^D^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^^[8;1HD^@^@^@^@[m [34m^@^@^@^@^@^@^@[m [34m^@^@^@^@^@^@^@[m [34m^@^@^@^@^@^@[m`[34m^B^@^@^@^@^@^@[m`[34m^B^@^@^@^@^@@[9;1H^@^@^P^@^@^@^@^@^@^A^@^@^@^F^@^@^@[mè[9;36H-[34m^@^@^@^@^@^@[mè[9;50H=[34m^@^@^@^@^@^@[mè[9;64H=[34m^@^@^@^@^@^@<80>>[10;1H^B^@^@^@^@^@^@[mÈ[34m^B^@^@^@^@^@^@^@^P^@^@^@^@^@^@^B^@^@^@^F^@^@^@[mø[10;63H-[34m^@^@^@^@^@^@[mø[10;77H=[34m^@^^[11;1H@^@^@^@^@[mø[11;11H=[34m^@^@^@^@^@^@[mà[11;25H[34m^A^@^@^@^@^@^@[mà[11;40H[34m^A^@^@^@^@^@^@^H^@^@^@^@^@^@^@^D^@^@^@^D^^[12;1H@^@^@[mÄ[34m^B^@^@^@^@^@^@[mÄ[34m^B^@^@^@^@^@^@[mÄ[34m^B^@^@^@^@^@^@[mD[34m^@^@^@^@^@^@^@[mD[34m^@^@^@^@^@^@^@@[13;1H^D^@^@^@^@^@^@^@[mPåtd[34m^D^@^@^@[mP [34m^@^@^@^@^@^@[mP [34m^@^@^@^@^@^@[mP [34m^@^@^@^@^@^@[mL[34m^@^@^@^@^^[14;1H@^@^@[mL[34m^@^@^@^@^@^@^@^D^@^@^@^@^@^@^@[mQåtd[34m^F^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[15;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^@^@^@^@[mRåtd[34m^D^@^@^@[mè[15;78H-[34m^@@[16;1H^@^@^@^@^@[mè[16;12H=[34m^@^@^@^@^@^@[mè[16;26H=[34m^@^@^@^@^@^@^X^B^@^@^@^@^@^@^X^B^@^@^@^@^@^@^A^@^@^@^@@[17;1H^@^@^@[m/lib64/ld-linux-x86-64.so.2[34m^@^D^@^@^@^P^@^@^@^A^@^@^@[mGNU[34m^@^@^@^@^@^C^@^@^@@[18;1H^B^@^@^@^@^@^@^@^D^@^@^@^T^@^@^@^C^@^@^@[mGNU[34m^@[mQXg0
Ýý¯k[34m<8d>[mÚ_)?dp[34m^T[m}ät[34m^C^@^@^@^M^@^@^@^A^@^@^@^F^@^@^@^@^A<81>^@^@^A^P^B^M^@^@^@^O^^[20;1H@^@^@^@^@^@^@[m([34m^]<8c>^\[mÑeÎm9ò[20;29H[34m<8b>^\^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[21;1H^@^W^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@<89>^@^@^@[m [34m^@^@^@^@^@^@^@^@^@^^[22;1H@^@^@^@^@^@^@^@^@^@[m7[34m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mk[34m^@^@^@^R^@^@^^[23;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mK[34m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[24;1H¥[34m^@^@^@[m [34m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@@[25;1H^@^@^@^@^@^@^@[m=[34m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m([34m^@^@^@^R^@^@^@^@^@@[26;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^K^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m´[26;78H[34m^@^^[27;1H@^@[m [34m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mb[34m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[28;1H@^@^@^@^@[m0[34m^@^@^@^Q^@^Y^@<80>[m@[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[mS[34m^@^@^@[m"[34m^@^@^@^@^@^@^@^^[29;1H@^@^@^@^@^@^@^@^@^@^@^@[mD[34m^@^@^@^Q^@^Y^@[m @[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@^@[mlibc.so.6[34m^^[30;1H@[mexit[34m^@[mstrtol[34m^@[m__errno_location[34m^@[mlrand48[34m^@[mstdout[34m^@[mfputc[34m^@[mmalloc[34m^@[mstderr[34m^@[mfprintff[31;1H[34m^@[m__cxa_finalize[34m^@[mstrerror[34m^@[m__libc_start_main[34m^@[mGLIBC_2.2.5[34m^@[m_ITM_deregisterTMCloo[32;1HneTable[34m^@[m__gmon_start__[34m^@[m_ITM_registerTMCloneTable[34m^@^@^@^B^@^@^@^B^@^B^@^B^@^@^@@[33;1H^B^@^B^@^B^@^B^@^@^@^B^@^B^@^B^@^B^@^@^@^A^@^A^@^A^@^@^@^P^@^@^@^@^@^@^@[mu[34m^Z[mi     [34;1H[34m^@^@^B^@[m}[34m^@^@^@^@^@^@^@[mè[34;25H=[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[m [34m^Q^@^@^@^@^@^@[mð[34;70H=[34m^@^@^@^@^@@[35;1H^@^H^@^@^@^@^@^@^@[m`[34m^Q^@^@^@^@^@^@[m`@[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[m`@[34m^@^@^@^@^@^@[mØ[35;79H?[34m^^[36;1H@^@^@^@^@^@^F^@^@^@^B^@^@^@^@^@^@^@^@^@^@^@[mà[36;45H?[34m^@^@^@^@^@^@^F^@^@^@^D^@^@^@^@^@^@^^[37;1H@^@^@^@^@[mè[37;11H?[34m^@^@^@^@^@^@^F^@^@^@^F^@^@^@^@^@^@^@^@^@^@^@[mð[37;57H?[34m^@^@^@^@^@^@^F^@^@^@^K^[m[37;1H[94m@@@                                                                             [m[38;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m^?[mELF[38;5;81m^B^A^A^@^@^@^@^@^@^@^@^@^C^@[m>[38;5;81m^@^A^@^@^@[mÀ[38;5;81m^P^@^@^@^@^@^@[m@[38;5;81m^@^@^@^@^@^@^@[mp^[38;5;81m^@^@@[2;1H^@^@^@^@^@^@^@^@[m@[38;5;81m^@[m8[38;5;81m^@^K^@[m@[38;5;81m^@[m%[38;5;81m^@[m$[38;5;81m^@^F^@^@^@^D^@^@^@[m@[38;5;81m^@^@^@^@^@^@^@[m@[38;5;81m^@^@^@^@^@^@^^[3;1H@[m@[38;5;81m^@^@^@^@^@^@^@[mh[38;5;81m^B^@^@^@^@^@^@[mh[38;5;81m^B^@^@^@^@^@^@^H^@^@^@^@^@^@^@^C^@^@^@^D^@^@^@[m¨[3;80H[38;5;81m^^[4;1HB^@^@^@^@^@^@[m¨[4;15H[38;5;81m^B^@^@^@^@^@^@[m¨[4;30H[38;5;81m^B^@^@^@^@^@^@^\^@^@^@^@^@^@^@^\^@^@^@^@^@^@^@^A^@^^[5;1H@^@^@^@^@^@^A^@^@^@^D^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mx[38;5;81m^G^@@[6;1H^@^@^@^@^@[mx[38;5;81m^G^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^E^@^@^@^@^P^@^@^@^@^@^@^@^P^@^^[7;1H@^@^@^@^@^@^P^@^@^@^@^@^@[mí[7;27H[38;5;81m^D^@^@^@^@^@^@[mí[7;42H[38;5;81m^D^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^^[8;1HD^@^@^@^@[m [38;5;81m^@^@^@^@^@^@^@[m [38;5;81m^@^@^@^@^@^@^@[m [38;5;81m^@^@^@^@^@^@[m`[38;5;81m^B^@^@^@^@^@^@[m`[38;5;81m^B^@^@^@^@^@@[9;1H^@^@^P^@^@^@^@^@^@^A^@^@^@^F^@^@^@[mè[9;36H-[38;5;81m^@^@^@^@^@^@[mè[9;50H=[38;5;81m^@^@^@^@^@^@[mè[9;64H=[38;5;81m^@^@^@^@^@^@<80>>[10;1H^B^@^@^@^@^@^@[mÈ[38;5;81m^B^@^@^@^@^@^@^@^P^@^@^@^@^@^@^B^@^@^@^F^@^@^@[mø[10;63H-[38;5;81m^@^@^@^@^@^@[mø[10;77H=[38;5;81m^@^^[11;1H@^@^@^@^@[mø[11;11H=[38;5;81m^@^@^@^@^@^@[mà[11;25H[38;5;81m^A^@^@^@^@^@^@[mà[11;40H[38;5;81m^A^@^@^@^@^@^@^H^@^@^@^@^@^@^@^D^@^@^@^D^^[12;1H@^@^@[mÄ[38;5;81m^B^@^@^@^@^@^@[mÄ[38;5;81m^B^@^@^@^@^@^@[mÄ[38;5;81m^B^@^@^@^@^@^@[mD[38;5;81m^@^@^@^@^@^@^@[mD[38;5;81m^@^@^@^@^@^@^@@[13;1H^D^@^@^@^@^@^@^@[mPåtd[38;5;81m^D^@^@^@[mP [38;5;81m^@^@^@^@^@^@[mP [38;5;81m^@^@^@^@^@^@[mP [38;5;81m^@^@^@^@^@^@[mL[38;5;81m^@^@^@^@^^[14;1H@^@^@[mL[38;5;81m^@^@^@^@^@^@^@^D^@^@^@^@^@^@^@[mQåtd[38;5;81m^F^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[15;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^@^@^@^@[mRåtd[38;5;81m^D^@^@^@[mè[15;78H-[38;5;81m^@@[16;1H^@^@^@^@^@[mè[16;12H=[38;5;81m^@^@^@^@^@^@[mè[16;26H=[38;5;81m^@^@^@^@^@^@^X^B^@^@^@^@^@^@^X^B^@^@^@^@^@^@^A^@^@^@^@@[17;1H^@^@^@[m/lib64/ld-linux-x86-64.so.2[38;5;81m^@^D^@^@^@^P^@^@^@^A^@^@^@[mGNU[38;5;81m^@^@^@^@^@^C^@^@^@@[18;1H^B^@^@^@^@^@^@^@^D^@^@^@^T^@^@^@^C^@^@^@[mGNU[38;5;81m^@[mQXg0
Ýý¯k[38;5;81m<8d>[mÚ_)?dp[38;5;81m^T[m}ät[38;5;81m^C^@^@^@^M^@^@^@^A^@^@^@^F^@^@^@^@^A<81>^@^@^A^P^B^M^@^@^@^O^^[20;1H@^@^@^@^@^@^@[m([38;5;81m^]<8c>^\[mÑeÎm9ò[20;29H[38;5;81m<8b>^\^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[21;1H^@^W^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@<89>^@^@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^^[22;1H@^@^@^@^@^@^@^@^@^@[m7[38;5;81m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mk[38;5;81m^@^@^@^R^@^@^^[23;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mK[38;5;81m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[24;1H¥[38;5;81m^@^@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@@[25;1H^@^@^@^@^@^@^@[m=[38;5;81m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m([38;5;81m^@^@^@^R^@^@^@^@^@@[26;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^K^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m´[26;78H[38;5;81m^@^^[27;1H@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mb[38;5;81m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[28;1H@^@^@^@^@[m0[38;5;81m^@^@^@^Q^@^Y^@<80>[m@[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[mS[38;5;81m^@^@^@[m"[38;5;81m^@^@^@^@^@^@^@^^[29;1H@^@^@^@^@^@^@^@^@^@^@^@[mD[38;5;81m^@^@^@^Q^@^Y^@[m @[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@^@[mlibc.so.6[38;5;81m^^[30;1H@[mexit[38;5;81m^@[mstrtol[38;5;81m^@[m__errno_location[38;5;81m^@[mlrand48[38;5;81m^@[mstdout[38;5;81m^@[mfputc[38;5;81m^@[mmalloc[38;5;81m^@[mstderr[38;5;81m^@[mfprintff[31;1H[38;5;81m^@[m__cxa_finalize[38;5;81m^@[mstrerror[38;5;81m^@[m__libc_start_main[38;5;81m^@[mGLIBC_2.2.5[38;5;81m^@[m_ITM_deregisterTMCloo[32;1HneTable[38;5;81m^@[m__gmon_start__[38;5;81m^@[m_ITM_registerTMCloneTable[38;5;81m^@^@^@^B^@^@^@^B^@^B^@^B^@^@^@@[33;1H^B^@^B^@^B^@^B^@^@^@^B^@^B^@^B^@^B^@^@^@^A^@^A^@^A^@^@^@^P^@^@^@^@^@^@^@[mu[38;5;81m^Z[mi     [34;1H[38;5;81m^@^@^B^@[m}[38;5;81m^@^@^@^@^@^@^@[mè[34;25H=[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[m [38;5;81m^Q^@^@^@^@^@^@[mð[34;70H=[38;5;81m^@^@^@^@^@@[35;1H^@^H^@^@^@^@^@^@^@[m`[38;5;81m^Q^@^@^@^@^@^@[m`@[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[m`@[38;5;81m^@^@^@^@^@^@[mØ[35;79H?[38;5;81m^^[36;1H@^@^@^@^@^@^F^@^@^@^B^@^@^@^@^@^@^@^@^@^@^@[mà[36;45H?[38;5;81m^@^@^@^@^@^@^F^@^@^@^D^@^@^@^@^@^@^^[37;1H@^@^@^@^@[mè[37;11H?[38;5;81m^@^@^@^@^@^@^F^@^@^@^F^@^@^@^@^@^@^@^@^@^@^@[mð[37;57H?[38;5;81m^@^@^@^@^@^@^F^@^@^@^K^[m[37;1H[94m@@@                                                                             [m[38;63H1,1[11CTop"simple-matmul" [noeol][converted] 32L, 27835C[1;1H[?25h[?25l[38;53H:[1;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/matmul-cache$ vim simple-matmul.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"simple-matmul.c" 15L, 267C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"matmul.h"[m

[32mvoid[m
matrix_multiply([32mint[m n, [32mdouble[m a[][n], [32mdouble[m b[][n], [32mdouble[m c[][n])
{
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [38;5;130mfor[m ([32mint[m j = [31m0[m; j < n; j++) [106m{[m[8;7Hc[i][j] = [31m0[m;[9;7H[38;5;130mfor[m ([32mint[m k = [31m0[m; k < n; k++) {[10;9Hc[i][j] += a[i][k]*b[k][j];[11;7H}
    [106m}[m
  }
}

[94m~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H12,5[10CAll[12;5H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"matmul.h"[m

[38;5;121mvoid[m
matrix_multiply([38;5;121mint[m n, [38;5;121mdouble[m a[][n], [38;5;121mdouble[m b[][n], [38;5;121mdouble[m c[][n])
{
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < n; i++) {
    [93mfor[m ([38;5;121mint[m j = [95m0[m; j < n; j++) [46m{[m[8;7Hc[i][j] = [95m0[m;[9;7H[93mfor[m ([38;5;121mint[m k = [95m0[m; k < n; k++) {[10;9Hc[i][j] += a[i][k]*b[k][j];[11;7H}
    [46m}[m
  }
}

[94m~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H12,5[10CAll"simple-matmul.c" 15L, 267C[12;5H[?25h[?25l[7;33H{[12;5H}[38;64H5,0-1[15;1H[?25h[?25l[38;53H:[15;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/matmul-cache$ cd ..
qxiong1@remote04:~/i220b/work/lab11$ cd int-search/
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim main.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"main.c" 43L, 1086C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"int_compare.h"[m

[35m#include [m[31m<assert.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element);


[34m/** Perform nTests searches for all elements in a[].  
 */[m
[32mstatic[m [32mvoid[m
do_search([32mint[m a[], [32mint[m nElements, [32mint[m nTests)
{
  [38;5;130mfor[m ([32mint[m t = [31m0[m; t < nTests; t++) {
    [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[18;7H[32mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[32mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [31m1[m);[21;7Hassert(foundIndex1 < [31m0[m || foundIndex1 == i + [31m1[m);
    }
  }
}

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m nTests = -[31m1[m;
  [32mint[m nElements = -[31m1[m;
  [38;5;130mif[m (argc != [31m3[m || (nElements = atoi(argv[[31m1[m])) <= [31m0[m ||[32;7H(nTests = atoi(argv[[31m2[m])) <= [31m0[m) {
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NUM_ELEMENTS NUM_TESTS[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }
  [32mint[m a[nElements];
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[38;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) {
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  }
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[38;63H1,1[11CTop"main.c" 43L, 1086C[1;1H[?25h[?25l[32;38H[46m{[35;3H}[m[38;63H32,38[32;38H[?25h[?25l[38;53H:[32;38H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ ls
binary-search.c  int_compare.h	  main.c
int_compare.c	 linear-search.c  Makefile
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 6L, 179C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H1,1[11CAll"linear-search.c" 6L, 179C[1;1H[?25h[?25l


[46m{

}[m[38;63H6[6;1H[?25h[?25l[4;1H{

}[38;63H5,2[5;2H[?25h[?25l[38;53H~@k[5;2H[38;53H   [5;3H[38;65H3[5;3H[?25h[?25l[38;53Hi[5;3H[38;53H [5;3H[38;1H[1m-- INSERT --[m[38;13H[K[38;63H5,3[11CAll[5;3H[?25h[?25l[6;37r[6;1H[L[1;38r[5;3H[K[6;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m[38;63H[K[38;63H6,2-9[9CAll[6;9H[?25h[?25l[38;63H5,3  [5;3H[?25h[?25lf[38;65H4[5;4H[?25h[?25lo[38;65H5[5;5H[?25h[?25l[93mfor[m[38;65H6[5;6H[?25h[?25l([38;65H7[5;7H[?25h[?25l)[46m()[m[38;65H8[5;8H[?25h[?25l[38;65H7[5;7H[?25h[?25l[46mi[m)i[46m)[m[38;65H8[5;8H[?25h[?25l[46mn[m)n[46m)[m[38;65H9[5;9H[?25h[?25l[38;5;121min[m[38;5;121m[46mt[m)[38;5;121mt[m[46m)[m[38;65H10[5;10H[?25h[?25l[46m [m) [46m)[m[38;66H1[5;11H[?25h[?25l[46mc[m)c[46m)[m[38;66H2[5;12H[?25h[?25l[46m=[m)=[46m)[m[38;66H3[5;13H[?25h[?25l)[5;13H[K[5;12H[46m)[m[38;66H2[5;12H[?25h[?25l)[5;12H[K[5;11H[46m)[m[38;66H1[5;11H[?25h[?25l[46mi[m)i[46m)[m[38;66H2[5;12H[?25h[?25l[46m=[m)=[46m)[m[38;66H3[5;13H[?25h[?25l[95m[46m0[m)[95m0[m[46m)[m[38;66H4[5;14H[?25h[?25l[46m [m) [46m)[m[38;66H5[5;15H[?25h[?25l[46m;[m);[46m)[m[38;66H6[5;16H[?25h[?25l[46m [m) [46m)[m[38;66H7[5;17H[?25h[?25l[46mi[m)i[46m)[m[38;66H8[5;18H[?25h[?25l[46m<[m)<[46m)[m[38;66H9[5;19H[?25h[?25l[46ma[m)a[46m)[m[38;65H20[5;20H[?25h[?25l[46m[[m[97m[101m)[m[[97m[46m)[m[38;66H1[5;21H[?25h[?25l[46m][m)][46m)[m[38;66H2[5;22H[?25h[?25l[46m.[m).[46m)[m[38;66H3[5;23H[?25h[?25l[46ml[m)l[46m)[m[38;66H4[5;24H[?25h[?25l[46mn[m)n[46m)[m[38;66H5[5;25H[?25h[?25l)[5;25H[K[5;24H[46m)[m[38;66H4[5;24H[?25h[?25l[46me[m)e[46m)[m[38;66H5[5;25H[?25h[?25l[46mn[m)n[46m)[m[38;66H6[5;26H[?25h[?25l[46mg[m)g[46m)[m[38;66H7[5;27H[?25h[?25l[46mt[m)t[46m)[m[38;66H8[5;28H[?25h[?25l[46mh[m)h[46m)[m[38;66H9[5;29H[?25h[?25l[4;1H[46m{[m[5;6H([22C)

[46m}[m[38;63H4,2 [4;2H[?25h[?25l[5;37r[5;1H[L[1;38r[7;1H[46m        [m
}[38;63H[K[38;63H5,2-9[9CAll[4;1H{


        [5;9H[?25h[?25l[38;65H1  [5;1H[?25h[?25l[38;65H2[5;2H[?25h[?25l[38;65H3[5;3H[?25h[?25li[38;65H4[5;4H[?25h[?25ln[38;65H5[5;5H[?25h[?25l[38;5;121mint[m[38;65H6[5;6H[?25h[?25l[38;65H7[5;7H[?25h[?25ls[38;65H8[5;8H[?25h[?25li[38;65H9[5;9H[?25h[?25lz[38;65H10[5;10H[?25h[?25le[38;66H1[5;11H[?25h[?25lo[38;66H2[5;12H[?25h[?25l[93msizeof[m[38;66H3[5;13H[?25h[?25lsizeofa[38;66H4[5;14H[?25h[?25l[38;66H5[5;15H[?25h[?25l=[38;66H6[5;16H[?25h[?25ls[38;66H7[5;17H[?25h[?25l[5;16H[K[38;66H6[5;16H[?25h[?25l[38;66H7[5;17H[?25h[?25ls[38;66H8[5;18H[?25h[?25li[38;66H9[5;19H[?25h[?25lz[38;65H20[5;20H[?25h[?25le[38;66H1[5;21H[?25h[?25lo[38;66H2[5;22H[?25h[?25l[93msizeof[m[38;66H3[5;23H[?25h[?25l([38;66H4[5;24H[?25h[?25l)[46m()[m[38;66H5[5;25H[?25h[?25l[38;66H4[5;24H[?25h[?25l[46ma[m)a[46m)[m[38;66H5[5;25H[?25h[?25l[38;66H6[5;26H[?25h[?25l(a)[38;66H7[5;27H[?25h[?25l/[38;66H8[5;28H[?25h[?25l[38;66H9[5;29H[?25h[?25ls[38;65H30[5;30H[?25h[?25li[38;66H1[5;31H[?25h[?25lz[38;66H2[5;32H[?25h[?25le[38;66H3[5;33H[?25h[?25lo[38;66H4[5;34H[?25h[?25l[93msizeof[m[38;66H5[5;35H[?25h[?25l([38;66H6[5;36H[?25h[?25l)[46m()[m[38;66H7[5;37H[?25h[?25l[38;66H6[5;36H[?25h[?25l[46ma[m)a[46m)[m[38;66H7[5;37H[?25h[?25l[46m[[m[97m[101m)[m[[97m[46m)[m[38;66H8[5;38H[?25h[?25l[95m[46m0[m[97m[101m)[m[95m0[m[97m[46m)[m[38;66H9[5;39H[?25h[?25l[46m][m)][46m)[m[38;65H40[5;40H[?25h[?25l[38;66H1[5;41H[?25h[?25l;[5;35H([4C)[38;66H2[5;42H[?25h[?25l[6;6H[46m([22C)[m[38;63H6,30[6;30H[?25h[?25l[38;65H29[6;29H[?25h[?25l)[6;29H[K[6;28H[46m)[m[38;66H8[6;28H[?25h[?25l)[6;28H[K[6;27H[46m)[m[38;66H7[6;27H[?25h[?25l)[6;27H[K[6;26H[46m)[m[38;66H6[6;26H[?25h[?25l)[6;26H[K[6;25H[46m)[m[38;66H5[6;25H[?25h[?25l)[6;25H[K[6;24H[46m)[m[38;66H4[6;24H[?25h[?25l)[6;24H[K[6;23H[46m)[m[38;66H3[6;23H[?25h[?25l)[6;23H[K[6;22H[46m)[m[38;66H2[6;22H[?25h[?25l[97m[101m)[m[6;22H[K[6;21H[97m[46m)[m[38;66H1[6;21H[?25h[?25l)[6;21H[K[6;20H[46m)[m[38;66H0[6;20H[?25h[?25l)[6;20H[K[6;19H[46m)[m[38;65H19[6;19H[?25h[?25l[46ms[m)s[46m)[m[38;65H20[6;20H[?25h[?25l[46mi[m)i[46m)[m[38;66H1[6;21H[?25h[?25l[46mz[m)z[46m)[m[38;66H2[6;22H[?25h[?25l[46me[m)e[46m)[m[38;66H3[6;23H[?25h[?25l[46mo[m)o[46m)[m[38;66H4[6;24H[?25h[?25l[93msizeo[m[93m[46mf[m)[93mf[m[46m)[m[38;66H5[6;25H[?25h[?25lsizeof[46ma[m)a[46m)[m[38;66H6[6;26H[?25h[?25l[46m [m) [46m)[m[38;66H7[6;27H[?25h[?25l[46m;[m);[46m)[m[38;66H8[6;28H[?25h[?25l[46m [m) [46m)[m[38;66H9[6;29H[?25h[?25l[46mi[m)i[46m)[m[38;65H30[6;30H[?25h[?25l[46m+[m)+[46m)[m[38;66H1[6;31H[?25h[?25l[46m+[m)+[46m)[m[38;66H2[6;32H[?25h[?25l[38;66H3[6;33H[?25h[?25l[7;37r[7;1H[L[1;38r[38;63H[K[38;63H7,4-11[8CAll[6;6H([25C)[7;11H[?25h[?25l  {[46m{

}[m[38;66H   [7;4H[?25h[?25l}[46m}[m

}[38;65H5[7;5H[?25h[?25l[38;65H4[7;4H[?25h[?25l[8;37r[8;1H[L[1;38r[7;4H[K[8;3H}[38;63H[K[38;63H8,3[11CAll[8;3H[46m}[?25h[?25l[9;37r[m[9;1H[L[1;38r[8;3H[K[9;3H}[38;63H[K[38;63H9,3[11CAll[9;3H[46m}[?25h[?25l\[m}\[46m}[m[38;65H4[9;4H[?25h[?25l}[9;4H[K[9;3H[46m}[m[38;65H3[9;3H[?25h[?25l[7;3H{

  }[38;63H8[8;3H[?25h[?25l[38;65H4-9[8;9H[?25h[?25li[38;65H5-10[8;10H[?25h[?25l[93mif[m[38;65H6-11[8;11H[?25h[?25l([38;65H7-12[8;12H[?25h[?25la[38;65H8-13[8;13H[?25h[?25lr[38;65H9-14[8;14H[?25h[?25l[8;13H[K[38;65H8-13[8;13H[?25h[?25l[[38;65H9-14[8;14H[?25h[?25li[38;65H10-15[8;15H[?25h[?25l][46m[[mi[46m][m[38;66H1-16[8;16H[?25h[?25l[i][38;66H2-17[8;17H[?25h[?25l=[38;66H3-18[8;18H[?25h[?25l=[38;66H4-19[8;19H[?25h[?25l[38;66H5-20[8;20H[?25h[?25le[38;66H6-21[8;21H[?25h[?25ll[38;66H7-22[8;22H[?25h[?25le[38;66H8-23[8;23H[?25h[?25lm[38;66H9-24[8;24H[?25h[?25le[38;65H20-25[8;25H[?25h[?25ln[38;66H1-26[8;26H[?25h[?25lt[38;66H2-27[8;27H[?25h[?25l)[8;11H[46m([15C)[m[38;66H3-28[8;28H[?25h[?25l[9;37r[9;1H[L[1;38r[38;63H[K[38;63H9,3-17[8CAll[8;11H([15C)[9;17H[?25h[?25l[9;9H{[46m{
[m  [46m}[m[38;68H0[9;10H[?25h[?25l}[46m}[m
  }[38;65H4-11[9;11H[?25h[?25l[38;65H3-10[9;10H[?25h[?25l[10;37r[10;1H[L[1;38r[9;10H[K[10;9H}[38;63H[K[38;63H10,2-9[8CAll[10;9H[46m}[?25h[?25l[11;37r[m[11;1H[L[1;38r[10;9H[K[11;9H}[38;63H[K[38;63H11,2-9[8CAll[11;9H[46m}[?25h[?25l[m[9;9H{[11;9H}[38;64H0[10;9H[?25h[?25l[38;66H3-17[10;17H[?25h[?25ln[38;66H4-18[10;18H[?25h[?25lE[38;66H5-19[10;19H[?25h[?25ll[38;66H6-20[10;20H[?25h[?25le[38;66H7-21[10;21H[?25h[?25lm[38;66H8-22[10;22H[?25h[?25le[38;66H9-23[10;23H[?25h[?25ln[38;66H10-24[10;24H[?25h[?25lt[38;67H1-25[10;25H[?25h[?25ls[38;67H2-26[10;26H[?25h[?25l[38;67H3-27[10;27H[?25h[?25l=[38;67H4-28[10;28H[?25h[?25l[38;67H5-29[10;29H[?25h[?25li[38;67H6-30[10;30H[?25h[?25l;[38;67H7-31[10;31H[?25h[?25l[11;37r[11;1H[L[1;38r[38;63H[K[38;63H11,3-17[7CAll[11;17H[?25h[?25lb[38;66H4-18[11;18H[?25h[?25lr[38;66H5-19[11;19H[?25h[?25le[38;66H6-20[11;20H[?25h[?25la[38;66H7-21[11;21H[?25h[?25l[93mbreak[m[38;66H8-22[11;22H[?25h[?25l;[38;66H9-23[11;23H[?25h[?25l[9;9H[46m{[12;9H}[m[38;64H2,3-10[12;10H[?25h[?25l[9;9H{[12;9H}[38;64H1,9-23[11;23H[?25h[?25l[38;64H0[10;23H[?25h[?25l[9;9H[46m{[12;9H}[m[38;63H9,3-10 [9;10H[?25h[?25l{[12;9H}[38;63H8,18-23[8;23H[?25h[?25l[7;3H[46m{[13;3H}[m[38;63H7,4    [7;4H[?25h[?25l{[13;3H}[38;63H6,23[6;23H[?25h[?25l[5;23H[46m([ma[46m)[m[38;63H5[5;23H[?25h[?25l(a)[38;63H6[6;23H[?25h[?25l[38;66H2[6;22H[?25h[?25l[38;66H1[6;21H[?25h[?25l[38;66H0[6;20H[?25h[?25l[38;65H19[6;19H[?25h[?25l[38;66H8[6;18H[?25h[?25l[38;66H7[6;17H[?25h[?25l[38;66H6[6;16H[?25h[?25l[38;66H5[6;15H[?25h[?25l[38;66H4[6;14H[?25h[?25l[38;66H3[6;13H[?25h[?25l[38;66H2[6;12H[?25h[?25l[38;63H5[5;12H[?25h[?25l[38;63H6[6;12H[?25h[?25l[38;66H1[6;11H[?25h[?25l[38;63H5[5;11H[?25h[?25l[38;63H6[6;11H[?25h[?25linti=[95m0[m ; i<sizeofa ; i++)[6;32H[K[38;66H0[6;10H[?25h[?25li=[95m0[m ; i<sizeofa ; i++)[6;31H[K[38;65H9 [6;9H[?25h[?25li=[95m0[m ; i<sizeofa ; i++)[6;30H[K[38;65H8[6;8H[?25h[?25l=[95m0[m ; i<sizeofa ; i++)[6;29H[K[6;6H[46m([21C)[m[38;65H7[6;7H[?25h[?25l([21C)[38;63H5[5;7H[?25h[?25l[38;65H8[5;8H[?25h[?25l[38;65H15[5;15H[?25h[?25l[38;66H7[5;17H[?25h[?25l[6C[46m([ma[46m)[m[38;65H23[5;23H[?25h[?25l[38;66H4[5;24H[?25h[?25l[38;66H5[5;25H[?25h[?25l(a)[38;66H7[5;27H[?25h[?25l[38;66H9[5;29H[?25h[?25l[6C[46m([4C)[m[38;65H35[5;35H[?25h[?25l[38;66H6[5;36H[?25h[?25l(a[46m[[1C][m)[38;66H7[5;37H[?25h[?25l[38;66H8[5;38H[?25h[?25l[38;66H9[5;39H[?25h[?25l[[1C][38;63H6,3 [6;3H[?25h[?25l[7;37r[7;1H[L[1;38r[6;3H[K[7;3H[93mfor[m(i=[95m0[m ; i<sizeofa ; i++)[38;63H[K[38;63H7,3[11CAll[7;3H[?25h[?25l[38;63H6[6;3H[?25h[?25li[38;65H4[6;4H[?25h[?25ln[38;65H5[6;5H[?25h[?25l[38;5;121mint[m[38;65H6[6;6H[?25h[?25l[38;65H7[6;7H[?25h[?25li[38;65H8[6;8H[?25h[?25l;[38;65H9[6;9H[?25h[?25l

  [46m{[14;3H}[m[38;63H14,4[14;4H[?25h[?25l[15;37r[15;1H[L[1;38r[38;63H[K[38;63H15,3[10CAll[8;3H{[14;3H}
  [?25h[?25li[38;66H4[15;4H[?25h[?25l[93mif[m[38;66H5[15;5H[?25h[?25l([38;66H6[15;6H[?25h[?25l)[46m()[m[38;66H7[15;7H[?25h[?25l[38;66H6[15;6H[?25h[?25l[46mn[m)n[46m)[m[38;66H7[15;7H[?25h[?25l[46mE[m)E[46m)[m[38;66H8[15;8H[?25h[?25l)[15;8H[K[15;7H[46m)[m[38;66H7[15;7H[?25h[?25l)[15;7H[K[15;6H[46m)[m[38;66H6[15;6H[?25h[?25l[46ms[m)s[46m)[m[38;66H7[15;7H[?25h[?25l[46mi[m)i[46m)[m[38;66H8[15;8H[?25h[?25l[46mz[m)z[46m)[m[38;66H9[15;9H[?25h[?25l[46me[m)e[46m)[m[38;66H10[15;10H[?25h[?25l)[15;10H[K[15;9H[46m)[m[38;66H9 [15;9H[?25h[?25l)[15;9H[K[15;8H[46m)[m[38;66H8[15;8H[?25h[?25l)[15;8H[K[15;7H[46m)[m[38;66H7[15;7H[?25h[?25l)[15;7H[K[15;6H[46m)[m[38;66H6[15;6H[?25h[?25l[46mi[m)i[46m)[m[38;66H7[15;7H[?25h[?25l[46m [m) [46m)[m[38;66H8[15;8H[?25h[?25l[46m=[m)=[46m)[m[38;66H9[15;9H[?25h[?25l[46m [m) [46m)[m[38;66H10[15;10H[?25h[?25l)[15;10H[K[15;9H[46m)[m[38;66H9 [15;9H[?25h[?25l[46m=[m)=[46m)[m[38;66H10[15;10H[?25h[?25l[46m [m) [46m)[m[38;67H1[15;11H[?25h[?25l[46ms[m)s[46m)[m[38;67H2[15;12H[?25h[?25l[46mi[m)i[46m)[m[38;67H3[15;13H[?25h[?25l[46mz[m)z[46m)[m[38;67H4[15;14H[?25h[?25l[46me[m)e[46m)[m[38;67H5[15;15H[?25h[?25l[46mo[m)o[46m)[m[38;67H6[15;16H[?25h[?25l[93msizeo[m[93m[46mf[m)[93mf[m[46m)[m[38;67H7[15;17H[?25h[?25lsizeof[46ma[m)a[46m)[m[38;67H8[15;18H[?25h[?25l[38;67H9[15;19H[?25h[?25l[16;37r[16;1H[L[1;38r[38;63H[K[38;63H16,4-11[7CAll[15;5H([12C)[16;11H[?25h[?25l  {[46m{

}[m[38;67H   [16;4H[?25h[?25l}[46m}[m

}[38;66H5[16;5H[?25h[?25l[38;66H4[16;4H[?25h[?25l[17;37r[17;1H[L[1;38r[16;4H[K[17;3H}[38;63H[K[38;63H17,3[10CAll[17;3H[46m}[?25h[?25l[18;37r[m[18;1H[L[1;38r[17;3H[K[18;3H}[38;63H[K[38;63H18,3[10CAll[18;3H[46m}[?25h[?25l[m[16;3H{

  }[38;64H7[17;3H[?25h[?25l[38;66H4-9[17;9H[?25h[?25ln[38;66H5-10[17;10H[?25h[?25lE[38;66H6-11[17;11H[?25h[?25ll[38;66H7-12[17;12H[?25h[?25le[38;66H8-13[17;13H[?25h[?25lm[38;66H9-14[17;14H[?25h[?25le[38;66H10-15[17;15H[?25h[?25ln[38;67H1-16[17;16H[?25h[?25lt[38;67H2-17[17;17H[?25h[?25ls[38;67H3-18[17;18H[?25h[?25l[38;67H4-19[17;19H[?25h[?25l=[38;67H5-20[17;20H[?25h[?25l[38;67H6-21[17;21H[?25h[?25l-[38;67H7-22[17;22H[?25h[?25l[95m1[m[38;67H8-23[17;23H[?25h[?25l;[38;67H9-24[17;24H[?25h[?25l[16;3H[46m{

[m  [46m}[m[38;64H8,4    [18;4H[?25h[?25l[19;37r[19;1H[L[1;38r[38;63H[K[38;63H19,3[10CAll[16;3H{

  }
  [?25h[?25l[20;37r[20;1H[L[1;38r[38;63H[K[38;63H20,3[10CAll[20;3H[?25h[?25lr[38;66H4[20;4H[?25h[?25le[38;66H5[20;5H[?25h[?25lt[38;66H6[20;6H[?25h[?25lu[38;66H7[20;7H[?25h[?25lr[38;66H8[20;8H[?25h[?25l  [93mreturn[m[38;66H9[20;9H[?25h[?25l[38;66H10[20;10H[?25h[?25ln[38;67H1[20;11H[?25h[?25lE[38;67H2[20;12H[?25h[?25ll[38;67H3[20;13H[?25h[?25le[38;67H4[20;14H[?25h[?25lm[38;67H5[20;15H[?25h[?25le[38;67H6[20;16H[?25h[?25ln[38;67H7[20;17H[?25h[?25lt[38;67H8[20;18H[?25h[?25ls[38;67H9[20;19H[?25h[?25l;[38;66H20[20;20H[?25h[38;1H[K[20;19H[?25l[38;53H^[[20;19H[38;53H  [20;20H[38;63H20,19[9CAll[20;19H[?25h[?25l[38;53H:[20;19H[38;53H[K[38;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"linear-search.c" 22L, 388C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ make
cc -g -Wall -std=c11 -O1   -c -o linear-search.o linear-search.c
[01m[Klinear-search.c:[m[K In function ‘[01m[Ksearch_for_element[m[K’:
[01m[Klinear-search.c:5:23:[m[K [01;35m[Kwarning: [m[K‘[01m[Ksizeof[m[K’ on array function parameter ‘[01m[Ka[m[K’ will return size of ‘[01m[Kint *[m[K’ [[01;35m[K-Wsizeof-array-argument[m[K]
   int sizeofa = sizeof[01;35m[K([m[Ka) / sizeof(a[0]);
                       [01;35m[K^[m[K
[01m[Klinear-search.c:3:24:[m[K [01;36m[Knote: [m[Kdeclared here
 search_for_element([01;36m[Kint a[][m[K, int nElements, int element)
                    [01;36m[K~~~~^~~[m[K
cc -g -Wall -std=c11 -O1   -c -o main.o main.c
cc -g -Wall -std=c11 -O1   -c -o int_compare.o int_compare.c
cc   linear-search.o main.o int_compare.o   -o linear-search
cc -g -Wall -std=c11 -O1   -c -o binary-search.o binary-search.c
cc   binary-search.o main.o int_compare.o   -o binary-search
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim [K[K[K[Kmakevim linear-search.c 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 22L, 388C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m sizeofa = [38;5;130msizeof[m(a) / [38;5;130msizeof[m(a[[31m0[m]);
  [32mint[m i;
  [38;5;130mfor[m(i=[31m0[m ; i<sizeofa ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }
  [38;5;130mif[m(i == sizeofa)
  {[17;9HnElements = -[31m1[m;
  }

  [38;5;130mreturn[m nElements;[21;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H20,19[9CAll[20;19H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m sizeofa = [93msizeof[m(a) / [93msizeof[m(a[[95m0[m]);
  [38;5;121mint[m i;
  [93mfor[m(i=[95m0[m ; i<sizeofa ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[93mbreak[m;[13;9H}
  }
  [93mif[m(i == sizeofa)
  {[17;9HnElements = -[95m1[m;
  }

  [93mreturn[m nElements;[21;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H20,19[9CAll"linear-search.c" 22L, 388C[20;19H[?25h[?25l[38;63H9,7-12[9;12H[?25h[?25l[38;63H5,22  [5;22H[?25h[?25l[38;53H^[[5;22H[38;53H  [5;22H[38;53H^[[5;22H[38;53H  [5;22H[?25h[?25l[38;53H:[5;22H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ make
make: Nothing to be done for 'all'.
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./[K[Kls
binary-search	 int_compare.c	linear-search	 main.c
binary-search.c  int_compare.h	linear-search.c  main.o
binary-search.o  int_compare.o	linear-search.o  Makefile
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 100 1
linear-search: main.c:19: do_search: Assertion `foundIndex == i' failed.
Aborted
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 22L, 388C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m sizeofa = [38;5;130msizeof[m(a) / [38;5;130msizeof[m(a[[31m0[m]);
  [32mint[m i;
  [38;5;130mfor[m(i=[31m0[m ; i<sizeofa ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }
  [38;5;130mif[m(i == sizeofa)
  {[17;9HnElements = -[31m1[m;
  }

  [38;5;130mreturn[m nElements;[21;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H5,22[10CAll[5;22H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m sizeofa = [93msizeof[m(a) / [93msizeof[m(a[[95m0[m]);
  [38;5;121mint[m i;
  [93mfor[m(i=[95m0[m ; i<sizeofa ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[93mbreak[m;[13;9H}
  }
  [93mif[m(i == sizeofa)
  {[17;9HnElements = -[95m1[m;
  }

  [93mreturn[m nElements;[21;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H5,22[10CAll"linear-search.c" 22L, 388C[5;22H[?25h[?25l[38;65H36[5;36H[?25h[?25l[46m([4C)[m[38;65H40[5;40H[?25h[?25l([4C)[38;65H17[5;17H[?25h[?25l[38;66H4[5;14H[?25h[?25l[38;53H^[[5;14H[38;53H  [5;14H[38;53H^[[5;14H[38;53H  [5;14H[?25h[?25l[38;53H:[5;14H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.c./linear-search 100 1[2Pvim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 22L, 388C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m sizeofa = [38;5;130msizeof[m(a) / [38;5;130msizeof[m(a[[31m0[m]);
  [32mint[m i;
  [38;5;130mfor[m(i=[31m0[m ; i<sizeofa ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }
  [38;5;130mif[m(i == sizeofa)
  {[17;9HnElements = -[31m1[m;
  }

  [38;5;130mreturn[m nElements;[21;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H5,14[10CAll[5;14H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m sizeofa = [93msizeof[m(a) / [93msizeof[m(a[[95m0[m]);
  [38;5;121mint[m i;
  [93mfor[m(i=[95m0[m ; i<sizeofa ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[93mbreak[m;[13;9H}
  }
  [93mif[m(i == sizeofa)
  {[17;9HnElements = -[95m1[m;
  }

  [93mreturn[m nElements;[21;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H5,14[10CAll"linear-search.c" 22L, 388C[5;14H[?25h[?25l[38;53Hi[5;14H[38;53H [5;14H[38;1H[1m-- INSERT --[m[38;13H[K[38;63H5,14[10CAll[5;14H[?25h[?25l[38;63H6,9 [6;9H[?25h[?25l[5;23H[46m([ma[46m)[m[38;63H5,25[5;25H[?25h[?25l[46m[[m[97m[101m)[m / [93msizeof[m(a[[95m0[m])[97m[101m;[6;8H;

[m  [97m[101m{[10;9H{[11;30H;[12;22H;[13;9H}[m[5;25H[[97m[46m)[m[38;66H6[5;26H[?25h[?25l[46m][m) / [93msizeof[m(a[[95m0[m]);[6;8H;

  {[10;9H{[11;30H;[12;22H;[13;9H}[5;26H][46m)[m[38;66H7[5;27H[?25h[38;1H[K[5;26H[?25l[38;53H^[[5;26H[38;53H  [5;27H(a[46m[][m)[38;63H5,26[10CAll[5;26H[?25h[?25l[38;53H:[5;26H[38;53H[K[38;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"linear-search.c" 22L, 390C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ make
cc -g -Wall -std=c11 -O1   -c -o linear-search.o linear-search.c
[01m[Klinear-search.c:[m[K In function ‘[01m[Ksearch_for_element[m[K’:
[01m[Klinear-search.c:5:26:[m[K [01;31m[Kerror: [m[Kexpected expression before ‘[01m[K][m[K’ token
   int sizeofa = sizeof(a[[01;31m[K][m[K) / sizeof(a[0]);
                          [01;31m[K^[m[K
make: *** [<builtin>: linear-search.o] Error 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ makevim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 22L, 390C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m sizeofa = [38;5;130msizeof[m(a[106m[][m) / [38;5;130msizeof[m(a[[31m0[m]);
  [32mint[m i;
  [38;5;130mfor[m(i=[31m0[m ; i<sizeofa ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }
  [38;5;130mif[m(i == sizeofa)
  {[17;9HnElements = -[31m1[m;
  }

  [38;5;130mreturn[m nElements;[21;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H5,26[10CAll[5;26H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m sizeofa = [93msizeof[m(a[46m[][m) / [93msizeof[m(a[[95m0[m]);
  [38;5;121mint[m i;
  [93mfor[m(i=[95m0[m ; i<sizeofa ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17HnElements = i;[12;17H[93mbreak[m;[13;9H}
  }
  [93mif[m(i == sizeofa)
  {[17;9HnElements = -[95m1[m;
  }

  [93mreturn[m nElements;[21;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H5,26[10CAll"linear-search.c" 22L, 390C[5;26H[?25h[?25l[46m([ma[][46m)[m[38;66H7[5;27H[?25h[?25l[38;53Hi[5;27H[38;53H [5;27H[38;1H[1m-- INSERT --[m[38;13H[K[38;63H5,27[10CAll[5;27H[?25h[?25l[97m[101m)[m[46m [m/ [93msizeof[m(a[[95m0[m])[97m[101m;[m[5;43H[K[6;8H[97m[101m;

[m  [97m[101m{[10;9H{[11;30H;[12;22H;[13;9H}[m[5;26H[97m[46m)[m [38;66H6[5;26H[?25h[?25l)[46m [m/ [93msizeof[m(a[[95m0[m]);[5;42H[K[6;8H;

  {[10;9H{[11;30H;[12;22H;[13;9H}[5;25H[46m)[m [38;66H5[5;25H[?25h[?25l(a)[38;63H3,30[3;30H[?25h[?25l[38;4H[1m(insert)- VISUAL --[m[38;63H[K[38;53H2[3;29H[38;63H3,29[10CAll[3;29H[1C[38;5;121m[48;5;242mn[?25h[?25l[m[38;53H1[3;30H[38;5;121mn[m[38;65H30[3;30H[?25h[?25l[38;53H2[3;31H[38;5;121m[48;5;242mn[m[38;66H1[3;31H[?25h[?25l[38;53H3[3;32H[38;5;121m[48;5;242mt[m[38;66H2[3;32H[?25h[?25l[38;53H4[3;33H[48;5;242m [m[38;66H3[3;33H[?25h[?25l[38;53H5[3;34H[48;5;242mn[m[38;66H4[3;34H[?25h[?25l[38;53H6[3;35H[48;5;242mE[m[38;66H5[3;35H[?25h[?25l[38;53H7[3;36H[48;5;242ml[m[38;66H6[3;36H[?25h[?25l[38;53H8[3;37H[48;5;242me[m[38;66H7[3;37H[?25h[?25l[38;53H9[3;38H[48;5;242mm[m[38;66H8[3;38H[?25h[?25l[38;53H10[3;39H[48;5;242me[m[38;66H9[3;39H[?25h[?25l[38;54H1[3;40H[48;5;242mn[m[38;65H40[3;40H[?25h[?25l[38;54H2[3;41H[48;5;242mt[m[38;66H1[3;41H[?25h[?25l[?25h[?25l[38;53H  [3;34H[38;4H[1mINSERTt --[m[38;13H[K[38;63H3,34[10CAll[3;30H[38;5;121mnt[m nElement[3;34H[?25h[?25l[38;66H3[3;33H[?25h[?25l[38;63H5,9 [5;9H[?25h[?25l[38;65H5[5;5H[?25h[?25l[38;63H6,8[6;8H[?25h[?25l[38;63H5,42[5;42H[?25h[?25l[5;41H[K[5;35H[46m([4C)[m[38;66H1[5;41H[?25h[?25l[5;40H[K[8;3H[97m[101m{[10;9H{[13;9H}[m[5;35H(a[46m[[1C][m[38;66H0[5;40H[?25h[?25l[5;39H[K[6;8H[97m[101m;[11;30H;[12;22H;[m[5;37H[[38;65H39[5;39H[?25h[?25l[5;38H[K[38;66H8[5;38H[?25h[?25l[5;37H[K[6;8H;[11;30H;[12;22H;[38;66H7[5;37H[?25h[?25l[5;36H[K[38;66H6[5;36H[?25h[?25l[5;35H[K[8;3H{[10;9H{[13;9H}[38;66H5[5;35H[?25h[?25lsizeo[5;34H[K[38;66H4[5;34H[?25h[?25l[5;33H[K[38;66H3[5;33H[?25h[?25l[5;32H[K[38;66H2[5;32H[?25h[?25l[5;31H[K[38;66H1[5;31H[?25h[?25l[5;30H[K[38;66H0[5;30H[?25h[?25l[5;29H[K[38;65H29[5;29H[?25h[?25l[38;66H8[5;28H[?25h[?25l[5;27H[K[38;66H7[5;27H[?25h[?25l[46m([ma[46m)[m[38;66H6[5;26H[?25h[?25l[5;25H[K[8;3H[97m[101m{[10;9H{[13;9H}[m[5;23H([38;66H5[5;25H[?25h[?25l[5;24H[K[38;66H4[5;24H[?25h[?25l[5;23H[K[8;3H{[10;9H{[13;9H}[38;66H3[5;23H[?25h[?25lsizeo[5;22H[K[38;66H2[5;22H[?25h[?25l[5;21H[K[38;66H1[5;21H[?25h[?25l[5;20H[K[38;66H0[5;20H[?25h[?25l[5;19H[K[38;65H19[5;19H[?25h[?25l[5;18H[K[38;66H8[5;18H[?25h[?25l[5;17H[K[38;66H7[5;17H[?25h[?25l[38;66H6[5;16H[?25h[?25l[5;15H[K[38;66H5[5;15H[?25h[?25l[38;66H4[5;14H[?25h[?25l[5;7H[93msizeof[m[5;13H[K[38;66H3[5;13H[?25h[?25lsizeo[5;12H[K[38;66H2[5;12H[?25h[?25l[5;11H[K[38;66H1[5;11H[?25h[?25l[5;10H[K[38;66H0[5;10H[?25h[?25l[5;9H[K[38;65H9 [5;9H[?25h[?25l[5;8H[K[38;65H8[5;8H[?25h[?25l[5;7H[K[38;65H7[5;7H[?25h[?25l[38;65H6[5;6H[?25h[?25lin[5;5H[K[38;65H5[5;5H[?25h[?25l[5;4H[K[38;65H4[5;4H[?25h[?25l[5;3H[K[38;65H3[5;3H[?25h[?25l[38;65H2[5;2H[?25h[?25l[38;65H1[5;1H[?25h[?25l[4;37r[37;1H
[1;38r[4;1H{[37;1H[94m~                                                                               [m[38;63H[K[38;63H4,2[11CAll[4;1H[46m{[21;1H}[4;2H[?25h[?25l[m{[21;1H}[38;63H6,22[6;22H[?25h[?25l[6;15H[93msizeof[m ; i++)[6;28H[K[38;66H1[6;21H[?25h[?25lsizeo ; i++)[6;27H[K[38;66H0[6;20H[?25h[?25l ; i++)[6;26H[K[38;65H19[6;19H[?25h[?25l ; i++)[6;25H[K[38;66H8[6;18H[?25h[?25l ; i++)[6;24H[K[38;66H7[6;17H[?25h[?25l ; i++)[6;23H[K[38;66H6[6;16H[?25h[?25l ; i++)[6;22H[K[38;66H5[6;15H[?25h[?25ln ; i++)[38;66H6[6;16H[?25h[?25lE ; i++)[38;66H7[6;17H[?25h[?25ll ; i++)[38;66H8[6;18H[?25h[?25le ; i++)[38;66H9[6;19H[?25h[?25lm ; i++)[38;65H20[6;20H[?25h[?25le ; i++)[38;66H1[6;21H[?25h[?25ln ; i++)[38;66H2[6;22H[?25h[?25lt ; i++)[38;66H3[6;23H[?25h[?25ls ; i++)[38;66H4[6;24H[?25h[?25l[38;63H5,9 [5;9H[?25h[?25l[6;37r[6;1H[L[1;38r[38;63H[K[38;63H6,3[11CAll[6;3H[?25h[?25li[38;65H4[6;4H[?25h[?25ln[38;65H5[6;5H[?25h[?25l[38;5;121mint[m[38;65H6[6;6H[?25h[?25l[38;65H7[6;7H[?25h[?25li[38;65H8[6;8H[?25h[?25ln[38;65H9[6;9H[?25h[?25ld[38;65H10[6;10H[?25h[?25le[38;66H1[6;11H[?25h[?25lx[38;66H2[6;12H[?25h[?25l[38;66H3[6;13H[?25h[?25l=[38;66H4[6;14H[?25h[?25l[38;66H5[6;15H[?25h[?25l-[38;66H6[6;16H[?25h[?25l[95m1[m[38;66H7[6;17H[?25h[?25l;[38;66H8[6;18H[?25h[?25l[16;3H[46m{

[m  [46m}[m[38;63H18,4[18;4H[?25h[?25l[18;3H[K[16;3H{[38;66H3[18;3H[?25h[?25l[38;66H2[18;2H[?25h[?25l[38;66H1[18;1H[?25h[?25l[17;37r[37;1H
[1;38r[17;9HnElements = -[95m1[m;[37;1H[94m~                                                                               [m[38;63H[K[38;63H17,19-24      All[17;24H[?25h[?25l[17;23H[K[38;67H8-23[17;23H[?25h[?25l[17;22H[K[38;67H7-22[17;22H[?25h[?25l[17;21H[K[38;67H6-21[17;21H[?25h[?25l[38;67H5-20[17;20H[?25h[?25l[17;19H[K[38;67H4-19[17;19H[?25h[?25l[38;67H3-18[17;18H[?25h[?25l[17;17H[K[38;67H2-17[17;17H[?25h[?25l[17;16H[K[38;67H1-16[17;16H[?25h[?25l[17;15H[K[38;67H0-15[17;15H[?25h[?25l[17;14H[K[38;66H9-14 [17;14H[?25h[?25l[17;13H[K[38;66H8-13[17;13H[?25h[?25l[17;12H[K[38;66H7-12[17;12H[?25h[?25l[17;11H[K[38;66H6-11[17;11H[?25h[?25l[17;10H[K[38;66H5-10[17;10H[?25h[?25l[17;9H[K[38;66H4-9 [17;9H[?25h[?25l[38;66H3  [17;3H[?25h[?25l[38;66H2[17;2H[?25h[?25l[38;66H1[17;1H[?25h[?25l[16;37r[37;1H
[1;38r[16;3H{[37;1H[94m~                                                                               [m[38;63H[K[38;63H16,4[10CAll[16;3H[46m{[20;1H}[16;4H[?25h[?25l[m[16;3H[K[20;1H}[38;66H3[16;3H[?25h[?25l[38;66H2[16;2H[?25h[?25l[38;66H1[16;1H[?25h[?25l[15;37r[37;1H
[1;38r[15;3H[93mif[m(i == sizeofa)[37;1H[94m~                                                                               [m[38;63H[K[38;63H15,19[9CAll[15;5H[46m([12C)[?25h[?25l[m[15;18H[K[15;5H([38;67H8[15;18H[?25h[?25l[15;11H[93msizeof[m[15;17H[K[38;67H7[15;17H[?25h[?25lsizeo[15;16H[K[38;67H6[15;16H[?25h[?25l[15;15H[K[38;67H5[15;15H[?25h[?25l[15;14H[K[38;67H4[15;14H[?25h[?25l[15;13H[K[38;67H3[15;13H[?25h[?25l[15;12H[K[38;67H2[15;12H[?25h[?25l[15;11H[K[38;67H1[15;11H[?25h[?25l[38;67H0[15;10H[?25h[?25l[15;9H[K[38;66H9 [15;9H[?25h[?25l[15;8H[K[38;66H8[15;8H[?25h[?25l[38;66H7[15;7H[?25h[?25l[15;6H[K[38;66H6[15;6H[?25h[?25l[15;5H[K[38;66H5[15;5H[?25h[?25li[15;4H[K[38;66H4[15;4H[?25h[?25l[15;3H[K[38;66H3[15;3H[?25h[?25l[38;66H2[15;2H[?25h[?25l[38;66H1[15;1H[?25h[?25l[14;37r[37;1H
[1;38r[14;3H}[37;1H[94m~                                                                               [m[38;63H[K[38;63H14,4[10CAll[8;3H[46m{[14;3H}[?25h[?25l[m[8;3H{[10;9H[46m{[13;9H}[m
  }[38;64H0,3-10[10;10H[?25h[?25l{[13;9H}[38;64H1,10-24[11;24H[?25h[?25l[38;64H2,9-23 [12;23H[?25h[?25l[38;64H1,11-25[11;25H[?25h[?25l[38;67H2-26[11;26H[?25h[?25l = i;[11;30H[K[38;67H1-25[11;25H[?25h[?25l = i;[11;29H[K[38;67H0-24[11;24H[?25h[?25l = i;[11;28H[K[38;66H9-23 [11;23H[?25h[?25l = i;[11;27H[K[38;66H8-22[11;22H[?25h[?25l = i;[11;26H[K[38;66H7-21[11;21H[?25h[?25l = i;[11;25H[K[38;66H6-20[11;20H[?25h[?25l = i;[11;24H[K[38;66H5-19[11;19H[?25h[?25l = i;[11;23H[K[38;66H4-18[11;18H[?25h[?25l = i;[11;22H[K[38;66H3-17[11;17H[?25h[?25li = i;[38;66H4-18[11;18H[?25h[?25ln = i;[38;66H5-19[11;19H[?25h[?25ld = i;[38;66H6-20[11;20H[?25h[?25le = i;[38;66H7-21[11;21H[?25h[?25lx = i;[38;66H8-22[11;22H[?25h[38;1H[K[11;21H[?25l[38;53H^[[11;21H[38;53H  [11;22H[38;63H11,7-21[7CAll[11;21H[?25h[?25l[38;53H:[11;21H[38;53H[K[38;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"linear-search.c" 18L, 316C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ make
cc -g -Wall -std=c11 -O1   -c -o linear-search.o linear-search.c
[01m[Klinear-search.c:[m[K In function ‘[01m[Ksearch_for_element[m[K’:
[01m[Klinear-search.c:6:7:[m[K [01;35m[Kwarning: [m[Kvariable ‘[01m[Kindex[m[K’ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
   int [01;35m[Kindex[m[K = -1;
       [01;35m[K^~~~~[m[K
cc   linear-search.o main.o int_compare.o   -o linear-search
qxiong1@remote04:~/i220b/work/lab11/int-search$ makevim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 18L, 316C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m i;
  [32mint[m index = -[31m1[m;
  [38;5;130mfor[m(i=[31m0[m ; i<nElements ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }

  [38;5;130mreturn[m nElements;[17;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H11,7-21[7CAll[11;21H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m i;
  [38;5;121mint[m index = -[95m1[m;
  [93mfor[m(i=[95m0[m ; i<nElements ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[93mbreak[m;[13;9H}
  }

  [93mreturn[m nElements;[17;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H11,7-21[7CAll"linear-search.c" 18L, 316C[11;21H[?25h[?25l[38;64H6,19  [16;19H[?25h[?25l[38;53Hi[16;19H[38;53H [16;19H[38;1H[1m-- INSERT --[m[38;13H[K[38;63H16,19[9CAll[16;19H[?25h[?25l;[16;19H[K[38;67H8[16;18H[?25h[?25l;[16;18H[K[38;67H7[16;17H[?25h[?25l;[16;17H[K[38;67H6[16;16H[?25h[?25l;[16;16H[K[38;67H5[16;15H[?25h[?25l;[16;15H[K[38;67H4[16;14H[?25h[?25l;[16;14H[K[38;67H3[16;13H[?25h[?25l;[16;13H[K[38;67H2[16;12H[?25h[?25l;[16;12H[K[38;67H1[16;11H[?25h[?25l;[16;11H[K[38;67H0[16;10H[?25h[?25li;[38;67H1[16;11H[?25h[?25ln;[38;67H2[16;12H[?25h[?25ld;[38;67H3[16;13H[?25h[?25le;[38;67H4[16;14H[?25h[?25lx;[38;67H5[16;15H[?25h[38;1H[K[16;14H[?25l[38;53H^[[16;14H[38;53H  [16;15H[38;63H16,14[9CAll[16;14H[?25h[?25l[38;53H:[16;14H[38;53H[K[38;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l"linear-search.c" 18L, 312C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ make
cc -g -Wall -std=c11 -O1   -c -o linear-search.o linear-search.c
cc   linear-search.o main.o int_compare.o   -o linear-search
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 01[K[K100 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ 
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search." [New File][2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H0,0-1[9CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[2;1H[94m~                                                                               [3;1H~                                                                               [4;1H~                                                                               [5;1H~                                                                               [6;1H~                                                                               [7;1H~                                                                               [8;1H~                                                                               [9;1H~                                                                               [10;1H~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H0,0-1[9CAll"linear-search." [New File][1;1H[?25h[?25l[38;53H:[1;1H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"linear-search.c" 18L, 312C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m i;
  [32mint[m index = -[31m1[m;
  [38;5;130mfor[m(i=[31m0[m ; i<nElements ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }

  [38;5;130mreturn[m index;[17;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H16,14[9CAll[16;14H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m i;
  [38;5;121mint[m index = -[95m1[m;
  [93mfor[m(i=[95m0[m ; i<nElements ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[93mbreak[m;[13;9H}
  }

  [93mreturn[m index;[17;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [m[38;63H16,14[9CAll"linear-search.c" 18L, 312C[16;14H[?25h[?25l[38;64H7,6-13[17;13H[?25h[?25l[38;64H5,0-1 [15;1H[?25h[?25l[38;63H7,7   [7;7H[?25h[?25l[38;53H2[7;8H[48;5;242mi[m[38;1H[1m-- VISUAL --[m[38;13H[K[38;53H2[7;8H[38;63H7,8[11CAll[7;8H[?25h[?25l[38;53H3[7;9H[48;5;242m=[m[38;65H9[7;9H[?25h[?25l[38;53H4[7;10H[95m[48;5;242m0[m[38;65H10[7;10H[?25h[?25l[38;53H5[7;11H[48;5;242m [m[38;66H1[7;11H[?25h[?25l[38;53H6[7;12H[48;5;242m;[m[38;66H2[7;12H[?25h[?25l[38;53H7[7;13H[48;5;242m [m[38;66H3[7;13H[?25h[?25l[38;53H8[7;14H[48;5;242mi[m[38;66H4[7;14H[?25h[?25l[38;53H9[7;15H[48;5;242m<[m[38;66H5[7;15H[?25h[?25l[38;53H10[7;16H[48;5;242mn[m[38;66H6[7;16H[?25h[?25l[38;54H1[7;17H[48;5;242mE[m[38;66H7[7;17H[?25h[?25l[38;54H2[7;18H[48;5;242ml[m[38;66H8[7;18H[?25h[?25l[38;54H3[7;19H[48;5;242me[m[38;66H9[7;19H[?25h[?25l[38;54H4[7;20H[48;5;242mm[m[38;65H20[7;20H[?25h[?25l[38;54H5[7;21H[48;5;242me[m[38;66H1[7;21H[?25h[?25l[38;54H6[7;22H[48;5;242mn[m[38;66H2[7;22H[?25h[?25l[38;54H7[7;23H[48;5;242mt[m[38;66H3[7;23H[?25h[?25l[38;54H8[7;24H[48;5;242ms[m[38;66H4[7;24H[?25h[?25l[38;54H9[7;25H[48;5;242m [m[38;66H5[7;25H[?25h[?25l[38;53H20[7;26H[48;5;242m;[m[38;66H6[7;26H[?25h[?25l[38;54H1[7;27H[48;5;242m [m[38;66H7[7;27H[?25h[?25l[38;54H2[7;28H[48;5;242mi[m[38;66H8[7;28H[?25h[?25l[38;54H3[7;29H[48;5;242m+[m[38;66H9[7;29H[?25h[?25l[38;54H4[7;30H[7;6H[46m([m[22C[48;5;242m+[m[46m)[m[38;65H30[7;30H[?25h[?25l[38;54H3[7;29H[7;6H([22C+)[38;65H29[7;29H[?25h[?25l[38;54H4[7;30H[7;6H[46m([m[22C[48;5;242m+[m[46m)[m[38;65H30[7;30H[?25h[?25l[?25h[?25l[38;53H  [7;30H[7;7Hi=[95m0[m ; i<nElements ; i++[38;1H[K[38;63H7,30[10CAll[7;30H[?25h[?25l[38;53H:[7;30H[38;53H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim main.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"main.c" 43L, 1086C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"int_compare.h"[m

[35m#include [m[31m<assert.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element);


[34m/** Perform nTests searches for all elements in a[].  
 */[m
[32mstatic[m [32mvoid[m
do_search([32mint[m a[], [32mint[m nElements, [32mint[m nTests)
{
  [38;5;130mfor[m ([32mint[m t = [31m0[m; t < nTests; t++) {
    [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[18;7H[32mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[32mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [31m1[m);[21;7Hassert(foundIndex1 < [31m0[m || foundIndex1 == i + [31m1[m);
    }
  }
}

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m nTests = -[31m1[m;
  [32mint[m nElements = -[31m1[m;
  [38;5;130mif[m (argc != [31m3[m || (nElements = atoi(argv[[31m1[m])) <= [31m0[m ||[32;7H(nTests = atoi(argv[[31m2[m])) <= [31m0[m) [106m{[m
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NUM_ELEMENTS NUM_TESTS[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  [106m}[m
  [32mint[m a[nElements];
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[38;63H32,38[9CTop[32;38H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[38;63H32,38[9CTop"main.c" 43L, 1086C[32;38H[?25h[?25l[38;53H:[32;38H[38;1H[K[38;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim main.clinear-search.c[K./linear-search 100 10 10 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 1.[K[K[K 0.1
usage: ./linear-search NUM_ELEMENTS NUM_TESTS
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 0.1[K[K[K1[13Pvim main.c./linear-search 10000 1[13Pvim main.clinear-search.c[9Pmain.c[K[K[K[K[K[K[K[K[K[Kls\
> ls
bash: lsls: command not found
qxiong1@remote04:~/i220b/work/lab11/int-search$ ls
binary-search	 int_compare.c	linear-search	 main.c
binary-search.c  int_compare.h	linear-search.c  main.o
binary-search.o  int_compare.o	linear-search.o  Makefile
qxiong1@remote04:~/i220b/work/lab11/int-search$ binary-search=[K[K[K[K[K[K[K[K[K[K[K[K[K[K./binary-search 100 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./binary-search 100 1[Kvim main.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"main.c" 43L, 1086C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"int_compare.h"[m

[35m#include [m[31m<assert.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element);


[34m/** Perform nTests searches for all elements in a[].  
 */[m
[32mstatic[m [32mvoid[m
do_search([32mint[m a[], [32mint[m nElements, [32mint[m nTests)
{
  [38;5;130mfor[m ([32mint[m t = [31m0[m; t < nTests; t++) {
    [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[18;7H[32mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[32mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [31m1[m);[21;7Hassert(foundIndex1 < [31m0[m || foundIndex1 == i + [31m1[m);
    }
  }
}

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m nTests = -[31m1[m;
  [32mint[m nElements = -[31m1[m;
  [38;5;130mif[m (argc != [31m3[m || (nElements = atoi(argv[[31m1[m])) <= [31m0[m ||[32;7H(nTests = atoi(argv[[31m2[m])) <= [31m0[m) [106m{[m
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NUM_ELEMENTS NUM_TESTS[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  [106m}[m
  [32mint[m a[nElements];
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[38;63H32,38[9CTop[32;38H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[38;63H32,38[9CTop"main.c" 43L, 1086C[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();[39;63H32,38[9CTop[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }[40;63H32,38[9CTop[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);[41;63H32,38[9CTop[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);[42;63H32,38[9CTop[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;[43;63H32,38[9CTop[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}[44;63H32,38[9CAll[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [m[45;63H32,38[9CAll[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [45;1H~                                                                               [m[46;63H32,38[9CAll[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [m[47;63H32,38[9CAll[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [m[48;63H32,38[9CAll[32;38H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H32,38[9CAll[32;38H[?25h[?25l[49;53H:[32;38H[49;53H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim main.c./binary-search 100 1[11Pvim main.c./binary-search 100 1ls[Kls[K[K[K[Kvim lina[K[K[K[Kbinary-search
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"binary-search" [noeol][converted] 28L, 26260C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m^?[mELF[34m^B^A^A^@^@^@^@^@^@^@^@^@^C^@[m>[34m^@^A^@^@^@[m [34m^P^@^@^@^@^@^@[m@[34m^@^@^@^@^@^@^@<88>[mY[34m^^[2;1H@^@^@^@^@^@^@^@^@^@[m@[34m^@[m8[34m^@^K^@[m@[34m^@[m%[34m^@[m$[34m^@^F^@^@^@^D^@^@^@[m@[34m^@^@^@^@^@^@^@[m@[34m^@^@^@^@^@@[3;1H^@^@[m@[34m^@^@^@^@^@^@^@[mh[34m^B^@^@^@^@^@^@[mh[34m^B^@^@^@^@^@^@^H^@^@^@^@^@^@^@^C^@^@^@^D^@^@^^[4;1H@[m¨[4;3H[34m^B^@^@^@^@^@^@[m¨[4;18H[34m^B^@^@^@^@^@^@[m¨[4;33H[34m^B^@^@^@^@^@^@^\^@^@^@^@^@^@^@^\^@^@^@^@^@^@^@^AA[5;1H^@^@^@^@^@^@^@^A^@^@^@^D^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mÀ[34m^^[6;1HF^@^@^@^@^@^@[mÀ[34m^F^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^E^@^@^@^@^P^@^@^@^@^@^@^@^PP[7;1H^@^@^@^@^@^@^@^P^@^@^@^@^@^@[mý[34m^C^@^@^@^@^@^@[mý[34m^C^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@@[8;1H^@^D^@^@^@^@[m [34m^@^@^@^@^@^@^@[m [34m^@^@^@^@^@^@^@[m [34m^@^@^@^@^@^@[mH[34m^B^@^@^@^@^@^@[mH[34m^B^@^@^@^^[9;1H@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^F^@^@^@[mè[9;39H-[34m^@^@^@^@^@^@[mè[9;53H=[34m^@^@^@^@^@^@[mè[9;67H=[34m^@^@^@^@^@^@[mpp[10;1H[34m^B^@^@^@^@^@^@<88>^B^@^@^@^@^@^@^@^P^@^@^@^@^@^@^B^@^@^@^F^@^@^@[mø[10;66H-[34m^@^@^@^@^@^@[mø[10;80H==[11;1H[34m^@^@^@^@^@^@[mø[11;14H=[34m^@^@^@^@^@^@[mà[11;28H[34m^A^@^@^@^@^@^@[mà[11;43H[34m^A^@^@^@^@^@^@^H^@^@^@^@^@^@^@^D^@^@^@@[12;1H^D^@^@^@[mÄ[34m^B^@^@^@^@^@^@[mÄ[34m^B^@^@^@^@^@^@[mÄ[34m^B^@^@^@^@^@^@[mD[34m^@^@^@^@^@^@^@[mD[34m^@^@^@^@^@^^[13;1H@^@^D^@^@^@^@^@^@^@[mPåtd[34m^D^@^@^@[m| [34m^@^@^@^@^@^@[m| [34m^@^@^@^@^@^@[m| [34m^@^@^@^@^@^@[mL[34m^@^@^@@[14;1H^@^@^@^@[mL[34m^@^@^@^@^@^@^@^D^@^@^@^@^@^@^@[mQåtd[34m^F^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[15;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^@^@^@^@[mRåtd[34m^D^@^@^@[mè[15;80Hè [16;1H-[34m^@^@^@^@^@^@[mè[16;15H=[34m^@^@^@^@^@^@[mè[16;29H=[34m^@^@^@^@^@^@^X^B^@^@^@^@^@^@^X^B^@^@^@^@^@^@^A^@^@^^[17;1H@^@^@^@^@[m/lib64/ld-linux-x86-64.so.2[34m^@^D^@^@^@^P^@^@^@^A^@^@^@[mGNU[34m^@^@^@^@^@^C^@^^[18;1H@^@^B^@^@^@^@^@^@^@^D^@^@^@^T^@^@^@^C^@^@^@[mGNU[34m^@<9a>[mW"ã»±[18;58HLjäé[18;62H:ª[18;64H_¸[18;66H![34m^\[mm"ÖÕ[34m^B^@^@^@@[19;1H^K^@^@^@^A^@^@^@^F^@^@^@^@^A<81>^@^@^@^@^B^K^@^@^@^L^@^@^@[mÑeÎm9ò[19;65H[34m<8b>^\^@^@^@^@^@@[20;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[ml[34m^@^@^@[m [34m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[21;1H^@^@[m9[34m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^R^@^@^@^@^@^@^@^@^@^^[22;1H@^@^@^@^@^@^@^@^@^@[mN[34m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m1[34m^@^@^@^R^@^@^^[23;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@<88>^@^@^@[m [34m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[24;1H^@^^^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^K^@^@^@^R^@^@^@^@^@^@^@^@^@^@@[25;1H^@^@^@^@^@^@^@^@^@<97>^@^@^@[m [34m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m%[34m^@^@^@^R^@^@@[26;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m?[34m^@^@^@[m"[34m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[27;1H*[34m^@^@^@^Q^@^Y^@[m`@[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@^@[mlibc.so.6[34m^@[mexit[34m^@[m__assert_fail[34m^@[mss[28;1Htrtol[34m^@[mrand[34m^@[mstderr[34m^@[mfprintf[34m^@[mqsort[34m^@[m__cxa_finalize[34m^@[m__libc_start_main[34m^@[mGLIBC_2..[29;1H2.5[34m^@[m_ITM_deregisterTMCloneTable[34m^@[m__gmon_start__[34m^@[m_ITM_registerTMCloneTable[34m^@^@^^[30;1H@^@^@^@^B^@^B^@^B^@^B^@^@^@^B^@^B^@^@^@^B^@^B^@^B^@^@^@^@^@^A^@^A^@^A^@^@^@^P^@^^[31;1H@^@^@^@^@^@[mu[34m^Z[mi [34m^@^@^B^@[m`[34m^@^@^@^@^@^@^@[mè[31;41H=[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@<80>^Q^@^@^^[32;1H@^@^@^@[mð[32;9H=[34m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[m@[34m^Q^@^@^@^@^@^@[mP@[34m^@^@^@^@^@^@^H^@^@^@^@^@^@@[33;1H^@[mP@[34m^@^@^@^@^@^@[mØ[33;18H?[34m^@^@^@^@^@^@^F^@^@^@^A^@^@^@^@^@^@^@^@^@^@^@[mà[33;64H?[34m^@^@^@^@^@^@^F^@@[34;1H^@^@^D^@^@^@^@^@^@^@^@^@^@^@[mè[34;30H?[34m^@^@^@^@^@^@^F^@^@^@^F^@^@^@^@^@^@^@^@^@^@^@[mð[34;76H?[34m^@^@@[35;1H^@^@^@^@^F^@^@^@[8C^@^@^@^@^@^@^@^@^@^@^@[mø[35;48H?[34m^@^@^@^@^@^@^F^@^@^@^K^@^@^@^@^@@[36;1H^@^@^@^@^@^@[m`@[34m^@^@^@^@^@^@^E^@^@^@^L^@^@^@^@^@^@^@^@^@^@^@^X[m@[34m^@^@^@^@^@^@^G^@^@^^[37;1H@^B^@^@^@^@^@^@^@^@^@^@^@[m @[34m^@^@^@^@^@^@^G^@^@^@^C^@^@^@^@^@^@^@^@^@^@^@[m(@[34m^@^@^@^^[38;1H@^@^@^G^@^@^@^E^@^@^@^@^@^@^@^@^@^@^@[m0@[34m^@^@^@^@^@^@^G^@^@^@^G^@^@^@^@^@^@^@^@^@^^[39;1H@^@[m8@[34m^@^@^@^@^@^@^G^@^@^@^H^@^@^@^@^@^@^@^@^@^@^@[m@@[34m^@^@^@^@^@^@^G^@^@^@
^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[41;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[42;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[43;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[44;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[45;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[46;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[47;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[48;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m[48;1H[94m@@@                                                                             [m[49;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m^?[mELF[38;5;81m^B^A^A^@^@^@^@^@^@^@^@^@^C^@[m>[38;5;81m^@^A^@^@^@[m [38;5;81m^P^@^@^@^@^@^@[m@[38;5;81m^@^@^@^@^@^@^@<88>[mY[38;5;81m^^[2;1H@^@^@^@^@^@^@^@^@^@[m@[38;5;81m^@[m8[38;5;81m^@^K^@[m@[38;5;81m^@[m%[38;5;81m^@[m$[38;5;81m^@^F^@^@^@^D^@^@^@[m@[38;5;81m^@^@^@^@^@^@^@[m@[38;5;81m^@^@^@^@^@@[3;1H^@^@[m@[38;5;81m^@^@^@^@^@^@^@[mh[38;5;81m^B^@^@^@^@^@^@[mh[38;5;81m^B^@^@^@^@^@^@^H^@^@^@^@^@^@^@^C^@^@^@^D^@^@^^[4;1H@[m¨[4;3H[38;5;81m^B^@^@^@^@^@^@[m¨[4;18H[38;5;81m^B^@^@^@^@^@^@[m¨[4;33H[38;5;81m^B^@^@^@^@^@^@^\^@^@^@^@^@^@^@^\^@^@^@^@^@^@^@^AA[5;1H^@^@^@^@^@^@^@^A^@^@^@^D^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[mÀ[38;5;81m^^[6;1HF^@^@^@^@^@^@[mÀ[38;5;81m^F^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^E^@^@^@^@^P^@^@^@^@^@^@^@^PP[7;1H^@^@^@^@^@^@^@^P^@^@^@^@^@^@[mý[38;5;81m^C^@^@^@^@^@^@[mý[38;5;81m^C^@^@^@^@^@^@^@^P^@^@^@^@^@^@^A^@^@@[8;1H^@^D^@^@^@^@[m [38;5;81m^@^@^@^@^@^@^@[m [38;5;81m^@^@^@^@^@^@^@[m [38;5;81m^@^@^@^@^@^@[mH[38;5;81m^B^@^@^@^@^@^@[mH[38;5;81m^B^@^@^@^^[9;1H@^@^@^@^P^@^@^@^@^@^@^A^@^@^@^F^@^@^@[mè[9;39H-[38;5;81m^@^@^@^@^@^@[mè[9;53H=[38;5;81m^@^@^@^@^@^@[mè[9;67H=[38;5;81m^@^@^@^@^@^@[mpp[10;1H[38;5;81m^B^@^@^@^@^@^@<88>^B^@^@^@^@^@^@^@^P^@^@^@^@^@^@^B^@^@^@^F^@^@^@[mø[10;66H-[38;5;81m^@^@^@^@^@^@[mø[10;80H==[11;1H[38;5;81m^@^@^@^@^@^@[mø[11;14H=[38;5;81m^@^@^@^@^@^@[mà[11;28H[38;5;81m^A^@^@^@^@^@^@[mà[11;43H[38;5;81m^A^@^@^@^@^@^@^H^@^@^@^@^@^@^@^D^@^@^@@[12;1H^D^@^@^@[mÄ[38;5;81m^B^@^@^@^@^@^@[mÄ[38;5;81m^B^@^@^@^@^@^@[mÄ[38;5;81m^B^@^@^@^@^@^@[mD[38;5;81m^@^@^@^@^@^@^@[mD[38;5;81m^@^@^@^@^@^^[13;1H@^@^D^@^@^@^@^@^@^@[mPåtd[38;5;81m^D^@^@^@[m| [38;5;81m^@^@^@^@^@^@[m| [38;5;81m^@^@^@^@^@^@[m| [38;5;81m^@^@^@^@^@^@[mL[38;5;81m^@^@^@@[14;1H^@^@^@^@[mL[38;5;81m^@^@^@^@^@^@^@^D^@^@^@^@^@^@^@[mQåtd[38;5;81m^F^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[15;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^@^@^@^@[mRåtd[38;5;81m^D^@^@^@[mè[15;80Hè [16;1H-[38;5;81m^@^@^@^@^@^@[mè[16;15H=[38;5;81m^@^@^@^@^@^@[mè[16;29H=[38;5;81m^@^@^@^@^@^@^X^B^@^@^@^@^@^@^X^B^@^@^@^@^@^@^A^@^@^^[17;1H@^@^@^@^@[m/lib64/ld-linux-x86-64.so.2[38;5;81m^@^D^@^@^@^P^@^@^@^A^@^@^@[mGNU[38;5;81m^@^@^@^@^@^C^@^^[18;1H@^@^B^@^@^@^@^@^@^@^D^@^@^@^T^@^@^@^C^@^@^@[mGNU[38;5;81m^@<9a>[mW"ã»±[18;58HLjäé[18;62H:ª[18;64H_¸[18;66H![38;5;81m^\[mm"ÖÕ[38;5;81m^B^@^@^@@[19;1H^K^@^@^@^A^@^@^@^F^@^@^@^@^A<81>^@^@^@^@^B^K^@^@^@^L^@^@^@[mÑeÎm9ò[19;65H[38;5;81m<8b>^\^@^@^@^@^@@[20;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[ml[38;5;81m^@^@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[21;1H^@^@[m9[38;5;81m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^P^@^@^@^R^@^@^@^@^@^@^@^@^@^^[22;1H@^@^@^@^@^@^@^@^@^@[mN[38;5;81m^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m1[38;5;81m^@^@^@^R^@^@^^[23;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@<88>^@^@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[24;1H^@^^^@^@^@^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^K^@^@^@^R^@^@^@^@^@^@^@^@^@^@@[25;1H^@^@^@^@^@^@^@^@^@<97>^@^@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m%[38;5;81m^@^@^@^R^@^@@[26;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m?[38;5;81m^@^@^@[m"[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[27;1H*[38;5;81m^@^@^@^Q^@^Y^@[m`@[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@^@[mlibc.so.6[38;5;81m^@[mexit[38;5;81m^@[m__assert_fail[38;5;81m^@[mss[28;1Htrtol[38;5;81m^@[mrand[38;5;81m^@[mstderr[38;5;81m^@[mfprintf[38;5;81m^@[mqsort[38;5;81m^@[m__cxa_finalize[38;5;81m^@[m__libc_start_main[38;5;81m^@[mGLIBC_2..[29;1H2.5[38;5;81m^@[m_ITM_deregisterTMCloneTable[38;5;81m^@[m__gmon_start__[38;5;81m^@[m_ITM_registerTMCloneTable[38;5;81m^@^@^^[30;1H@^@^@^@^B^@^B^@^B^@^B^@^@^@^B^@^B^@^@^@^B^@^B^@^B^@^@^@^@^@^A^@^A^@^A^@^@^@^P^@^^[31;1H@^@^@^@^@^@[mu[38;5;81m^Z[mi [38;5;81m^@^@^B^@[m`[38;5;81m^@^@^@^@^@^@^@[mè[31;41H=[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@<80>^Q^@^@^^[32;1H@^@^@^@[mð[32;9H=[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@^@[m@[38;5;81m^Q^@^@^@^@^@^@[mP@[38;5;81m^@^@^@^@^@^@^H^@^@^@^@^@^@@[33;1H^@[mP@[38;5;81m^@^@^@^@^@^@[mØ[33;18H?[38;5;81m^@^@^@^@^@^@^F^@^@^@^A^@^@^@^@^@^@^@^@^@^@^@[mà[33;64H?[38;5;81m^@^@^@^@^@^@^F^@@[34;1H^@^@^D^@^@^@^@^@^@^@^@^@^@^@[mè[34;30H?[38;5;81m^@^@^@^@^@^@^F^@^@^@^F^@^@^@^@^@^@^@^@^@^@^@[mð[34;76H?[38;5;81m^@^@@[35;1H^@^@^@^@^F^@^@^@[8C^@^@^@^@^@^@^@^@^@^@^@[mø[35;48H?[38;5;81m^@^@^@^@^@^@^F^@^@^@^K^@^@^@^@^@@[36;1H^@^@^@^@^@^@[m`@[38;5;81m^@^@^@^@^@^@^E^@^@^@^L^@^@^@^@^@^@^@^@^@^@^@^X[m@[38;5;81m^@^@^@^@^@^@^G^@^@^^[37;1H@^B^@^@^@^@^@^@^@^@^@^@^@[m @[38;5;81m^@^@^@^@^@^@^G^@^@^@^C^@^@^@^@^@^@^@^@^@^@^@[m(@[38;5;81m^@^@^@^^[38;1H@^@^@^G^@^@^@^E^@^@^@^@^@^@^@^@^@^@^@[m0@[38;5;81m^@^@^@^@^@^@^G^@^@^@^G^@^@^@^@^@^@^@^@^@^^[39;1H@^@[m8@[38;5;81m^@^@^@^@^@^@^G^@^@^@^H^@^@^@^@^@^@^@^@^@^@^@[m@@[38;5;81m^@^@^@^@^@^@^G^@^@^@
^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[41;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[42;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[43;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[44;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[45;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[46;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[47;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[48;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m[48;1H[94m@@@                                                                             [m[49;63H1,1[11CTop"binary-search" [noeol][converted] 28L, 26260C[1;1H[?25h[?25l[49;53H:[1;1H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim binary-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"binary-search.c" 12L, 282C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"int_compare.h"[m

[35m#include [m[31m<stdlib.h>[m


[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m *p = bsearch(&element, a, nElements, [38;5;130msizeof[m(a[[31m0[m]), int_compare);
  [38;5;130mreturn[m (p) ? p - a : -[31m1[m;
}
[94m~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<stdlib.h>[m


[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m *p = bsearch(&element, a, nElements, [93msizeof[m(a[[95m0[m]), int_compare);
  [93mreturn[m (p) ? p - a : -[95m1[m;
}
[94m~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H1,1[11CAll"binary-search.c" 12L, 282C[1;1H[?25h[?25l[49;53H:[1;1H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim main.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.c" 43L, 1086C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"int_compare.h"[m

[35m#include [m[31m<assert.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element);


[34m/** Perform nTests searches for all elements in a[].  
 */[m
[32mstatic[m [32mvoid[m
do_search([32mint[m a[], [32mint[m nElements, [32mint[m nTests)
{
  [38;5;130mfor[m ([32mint[m t = [31m0[m; t < nTests; t++) {
    [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[18;7H[32mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[32mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [31m1[m);[21;7Hassert(foundIndex1 < [31m0[m || foundIndex1 == i + [31m1[m);
    }
  }
}

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m nTests = -[31m1[m;
  [32mint[m nElements = -[31m1[m;
  [38;5;130mif[m (argc != [31m3[m || (nElements = atoi(argv[[31m1[m])) <= [31m0[m ||[32;7H(nTests = atoi(argv[[31m2[m])) <= [31m0[m) [106m{[m
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NUM_ELEMENTS NUM_TESTS[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  [106m}[m
  [32mint[m a[nElements];
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [38;5;130msizeof[m([32mint[m), int_compare);
  do_search(a, nElements, nTests);
  [38;5;130mreturn[m [31m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H32,38[9CAll[32;38H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H32,38[9CAll"main.c" 43L, 1086C[32;38H[?25h[?25l[49;53H:[32;38H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10000 1[K[K[K[K[K 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10 1=[K[K12
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10 12[K00
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 10 100[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kbinary-search 10 100
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./binary-search 10 100[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"linear-search.c" 18L, 312C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m i;
  [32mint[m index = -[31m1[m;
  [38;5;130mfor[m[106m([mi=[31m0[m ; i<nElements ; i++[106m)[m
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }

  [38;5;130mreturn[m index;[17;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H7,30[10CAll[7;30H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m i;
  [38;5;121mint[m index = -[95m1[m;
  [93mfor[m[46m([mi=[95m0[m ; i<nElements ; i++[46m)[m
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[93mbreak[m;[13;9H}
  }

  [93mreturn[m index;[17;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H7,30[10CAll"linear-search.c" 18L, 312C[7;30H[?25h[?25l[7;6H([23C)[49;63H16,15[16;15H[?25h[?25l[49;53H:[16;15H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.c./binary-search 10 100[K[K[K[K0 1[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Klinear-search 100 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ ./linear-search 100 1[K./binary-search 100 1
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim linear-search.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"linear-search.c" 18L, 312C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m
search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element)
{
  [32mint[m i;
  [32mint[m index = -[31m1[m;
  [38;5;130mfor[m(i=[31m0[m ; i<nElements ; i++)
  {[9;9H[38;5;130mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[38;5;130mbreak[m;[13;9H}
  }

  [38;5;130mreturn[m index;[17;9H[34m//@[m[30m[103mTODO[m[34m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H16,15[9CAll[16;15H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m
search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element)
{
  [38;5;121mint[m i;
  [38;5;121mint[m index = -[95m1[m;
  [93mfor[m(i=[95m0[m ; i<nElements ; i++)
  {[9;9H[93mif[m(a[i] == element)[10;9H{[11;17Hindex = i;[12;17H[93mbreak[m;[13;9H}
  }

  [93mreturn[m index;[17;9H[96m//@[m[30m[103mTODO[m[96m add your code here to meet above spec.[m
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H16,15[9CAll"linear-search.c" 18L, 312C[16;15H[?25h[?25l[49;53H:[16;15H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ time[K[K[K[K./linear-search 2000 2000
qxiong1@remote04:~/i220b/work/lab11/int-search$ time ./linear-search 2000 2000

real	0m7.693s
user	0m7.692s
sys	0m0.000s
qxiong1@remote04:~/i220b/work/lab11/int-search$ time ./linear-search 2000 2000[K[K[K[K[K[K[K[K[K100 1

real	0m0.002s
user	0m0.001s
sys	0m0.000s
qxiong1@remote04:~/i220b/work/lab11/int-search$ vim main.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"main.c" 43L, 1086C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m"int_compare.h"[m

[35m#include [m[31m<assert.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[34m/** Return index of element in a[nElements]; < [m[31m0[m[34m if not found. */[m
[32mint[m search_for_element([32mint[m a[], [32mint[m nElements, [32mint[m element);


[34m/** Perform nTests searches for all elements in a[].  
 */[m
[32mstatic[m [32mvoid[m
do_search([32mint[m a[], [32mint[m nElements, [32mint[m nTests)
{
  [38;5;130mfor[m ([32mint[m t = [31m0[m; t < nTests; t++) {
    [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {[18;7H[32mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[32mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [31m1[m);[21;7Hassert(foundIndex1 < [31m0[m || foundIndex1 == i + [31m1[m);
    }
  }
}

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [32mint[m nTests = -[31m1[m;
  [32mint[m nElements = -[31m1[m;
  [38;5;130mif[m (argc != [31m3[m || (nElements = atoi(argv[[31m1[m])) <= [31m0[m ||[32;7H(nTests = atoi(argv[[31m2[m])) <= [31m0[m) [106m{[m
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NUM_ELEMENTS NUM_TESTS[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  [106m}[m
  [32mint[m a[nElements];
  [38;5;130mfor[m ([32mint[m i = [31m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [38;5;130msizeof[m([32mint[m), int_compare);
  do_search(a, nElements, nTests);
  [38;5;130mreturn[m [31m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H32,38[9CAll[32;38H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m"int_compare.h"[m

[38;5;81m#include [m[95m<assert.h>[m
[38;5;81m#include [m[95m<stdio.h>[m
[38;5;81m#include [m[95m<stdlib.h>[m

[96m/** Return index of element in a[nElements]; < [m[95m0[m[96m if not found. */[m
[38;5;121mint[m search_for_element([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m element);


[96m/** Perform nTests searches for all elements in a[].  
 */[m
[38;5;121mstatic[m [38;5;121mvoid[m
do_search([38;5;121mint[m a[], [38;5;121mint[m nElements, [38;5;121mint[m nTests)
{
  [93mfor[m ([38;5;121mint[m t = [95m0[m; t < nTests; t++) {
    [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {[18;7H[38;5;121mint[m foundIndex = search_for_element(a, nElements, a[i]);[19;7Hassert(foundIndex == i);[20;7H[38;5;121mint[m foundIndex1 = search_for_element(a, nElements, a[i] + [95m1[m);[21;7Hassert(foundIndex1 < [95m0[m || foundIndex1 == i + [95m1[m);
    }
  }
}

[38;5;121mint[m
main([38;5;121mint[m argc, [38;5;121mconst[m [38;5;121mchar[m *argv[])
{
  [38;5;121mint[m nTests = -[95m1[m;
  [38;5;121mint[m nElements = -[95m1[m;
  [93mif[m (argc != [95m3[m || (nElements = atoi(argv[[95m1[m])) <= [95m0[m ||[32;7H(nTests = atoi(argv[[95m2[m])) <= [95m0[m) [46m{[m
    fprintf([95mstderr[m, [95m"usage: [m[38;5;224m%s[m[95m NUM_ELEMENTS NUM_TESTS[m[38;5;224m\n[m[95m"[m, argv[[95m0[m]);
    exit([95m1[m);
  [46m}[m
  [38;5;121mint[m a[nElements];
  [93mfor[m ([38;5;121mint[m i = [95m0[m; i < nElements; i++) {
    a[i] = rand();
  }
  qsort(a, nElements, [93msizeof[m([38;5;121mint[m), int_compare);
  do_search(a, nElements, nTests);
  [93mreturn[m [95m0[m;
}
[94m~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H32,38[9CAll"main.c" 43L, 1086C[32;38H[?25h[?25l{[35;3H}[49;63H19,7 [19;7H[?25h[?25l[49;66H6[19;6H[?25h[?25l[49;53H2[19;7H[48;5;242m [m[49;1H[1m-- VISUAL --[m[49;13H[K[49;53H2[19;7H[49;63H19,7[10CAll[19;7H[?25h[?25l[49;53H3[19;8H[48;5;242ma[m[49;66H8[19;8H[?25h[?25l[49;53H4[19;9H[48;5;242ms[m[49;66H9[19;9H[?25h[?25l[49;53H5[19;10H[48;5;242ms[m[49;66H10[19;10H[?25h[?25l[49;53H6[19;11H[48;5;242me[m[49;67H1[19;11H[?25h[?25l[49;53H7[19;12H[48;5;242mr[m[49;67H2[19;12H[?25h[?25l[49;53H8[19;13H[48;5;242mt[m[46m([15C)[m[49;67H3[19;13H[?25h[?25l[49;53H9[19;14H[48;5;242m([m[15C)[49;67H4[19;14H[?25h[?25l[49;53H10[19;15H[48;5;242mf[m[49;67H5[19;15H[?25h[?25l[49;54H1[19;16H[48;5;242mo[m[49;67H6[19;16H[?25h[?25l[49;54H2[19;17H[48;5;242mu[m[49;67H7[19;17H[?25h[?25l[49;54H3[19;18H[48;5;242mn[m[49;67H8[19;18H[?25h[?25l[49;54H4[19;19H[48;5;242md[m[49;67H9[19;19H[?25h[?25l[49;54H5[19;20H[48;5;242mI[m[49;66H20[19;20H[?25h[?25l[49;54H7[19;22H[48;5;242mnd[m[49;67H2[19;22H[?25h[?25l[49;54H8[19;23H[48;5;242me[m[49;67H3[19;23H[?25h[?25l[49;54H9[19;24H[48;5;242mx[m[49;67H4[19;24H[?25h[?25l[49;53H20[19;25H[48;5;242m [m[49;67H5[19;25H[?25h[?25l[49;54H1[19;26H[48;5;242m=[m[49;67H6[19;26H[?25h[?25l[49;54H [20;26H[19;26H[48;5;242m= i); 
      [m[38;5;121m[48;5;242mint[m[48;5;242m foundIndex1 = s[m[49;63H20[20;26H[?25h[?25le[48;5;242me[m[49;67H7[20;27H[?25h[?25la[48;5;242ma[m[49;67H8[20;28H[?25h[?25lr[48;5;242mr[m[49;67H9[20;29H[?25h[?25lc[48;5;242mc[m[49;66H30[20;30H[?25h[?25lh[48;5;242mh[m[49;67H1[20;31H[?25h[?25l_[48;5;242m_[m[49;67H2[20;32H[?25h[?25lf[48;5;242mf[m[49;67H3[20;33H[?25h[?25l[49;54H6[19;31H[19;31H[K[20;1H      [38;5;121mint[m foundIndex1 = search_f[49;63H19,31[19;31H[?25h[?25l[?25h[?25l[49;53H  [20;20H[19;6H assert(foundIndex == i);[49;1H[K[49;63H20,20[9CAll[20;20H[?25h[?25l[16;36H[46m{[23;3H}[m[49;64H3,3 [23;3H[?25h[?25l[49;53H:[23;3H[49;53H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/int-search$ cd ..
qxiong1@remote04:~/i220b/work/lab11$ cd coverage/
qxiong1@remote04:~/i220b/work/lab11/coverage$ make
cc -g -Wall -std=c11 -fprofile-arcs -ftest-coverage    coverage.c   -o coverage
qxiong1@remote04:~/i220b/work/lab11/coverage$ ls
coverage  coverage.c  coverage.gcno  Makefile
qxiong1@remote04:~/i220b/work/lab11/coverage$ vim Makefile
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"Makefile" 10L, 164C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[36mCFLAGS [m= -g -Wall -std=c11 -fprofile-arcs -ftest-coverage

[36mTARGETS [m=[7Ccoverage

[36mcoverage:[m[7Ccoverage.c

[38;5;130m.PHONY:[m[9Cclean
[36mclean:[m
[31m                rm -f [m[36m$(TARGETS)[m[31m *.o *~ *.gcda *.gcno[m

[94m~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[1m[96mCFLAGS [m= -g -Wall -std=c11 -fprofile-arcs -ftest-coverage

[1m[96mTARGETS [m=[7Ccoverage

[1m[96mcoverage:[m[7Ccoverage.c

[93m.PHONY:[m[9Cclean
[1m[96mclean:[m
[95m                rm -f [m[1m[96m$(TARGETS)[m[95m *.o *~ *.gcda *.gcno[m

[94m~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H1,1[11CAll"Makefile" 10L, 164C[1;1H[?25h[?25l[49;53H:[1;1H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/coverage$ ./coverage 
qxiong1@remote04:~/i220b/work/lab11/coverage$ ./coverage 200 2000 2999
qxiong1@remote04:~/i220b/work/lab11/coverage$ ls
coverage  coverage.c  coverage.gcda  coverage.gcno  Makefile
qxiong1@remote04:~/i220b/work/lab11/coverage$ vim coverage.gcda
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"coverage.gcda" [noeol][converted] 3L, 315C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1Hadcg*38A¿[1;10Hµ[34m<89>[m#[34m^@^@^@[m£[34m^[^@^@^@[mC
´[2;2H;[34m^N^@^@^@^B^@^@^@^F^@^@^@^@^@^@^@^A^@^@^@^@^@^@^@^B^@^@^@^@^@^@^@^E^@^@^@^@^@^@@[3;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^K^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[4;1H^@^@^@^@^@^C^@^@^@^B^@^@^@^@^@^@^@^F^@^@^@^@^@^@^@^@^@^@^A^C^@^@^@[mërp[34m^F[mÁ 3`[34m^Y[mMpyy[5;1H[34m^@^@[m¡[5;6H[34m^A
^@^@^@^B^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^B^@^@^@^@^@^@^@^B^@^@^@^@@[7;1H^@^@^@^@^@^@^A^C^@^@^@[m%[34m<83>[mXv¼[7;31H}[34m<9e>[m÷[7;37Hø[7;38Hg6Â[34m^@^@[m¡[7;46H[34m^A^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[8;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[9;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m
[94m~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1Hadcg*38A¿[1;10Hµ[38;5;81m<89>[m#[38;5;81m^@^@^@[m£[38;5;81m^[^@^@^@[mC
´[2;2H;[38;5;81m^N^@^@^@^B^@^@^@^F^@^@^@^@^@^@^@^A^@^@^@^@^@^@^@^B^@^@^@^@^@^@^@^E^@^@^@^@^@^@@[3;1H^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^K^@^@^@^@^@^@^@^@^@^@^@^@^@^@@[4;1H^@^@^@^@^@^C^@^@^@^B^@^@^@^@^@^@^@^F^@^@^@^@^@^@^@^@^@^@^A^C^@^@^@[mërp[38;5;81m^F[mÁ 3`[38;5;81m^Y[mMpyy[5;1H[38;5;81m^@^@[m¡[5;6H[38;5;81m^A
^@^@^@^B^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^B^@^@^@^@^@^@^@^B^@^@^@^@@[7;1H^@^@^@^@^@^@^A^C^@^@^@[m%[38;5;81m<83>[mXv¼[7;31H}[38;5;81m<9e>[m÷[7;37Hø[7;38Hg6Â[38;5;81m^@^@[m¡[7;46H[38;5;81m^A^R^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[8;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^^[9;1H@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@^@[m
[94m~                                                                               [11;1H~                                                                               [12;1H~                                                                               [13;1H~                                                                               [14;1H~                                                                               [15;1H~                                                                               [16;1H~                                                                               [17;1H~                                                                               [18;1H~                                                                               [19;1H~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [24;1H~                                                                               [25;1H~                                                                               [26;1H~                                                                               [27;1H~                                                                               [28;1H~                                                                               [29;1H~                                                                               [30;1H~                                                                               [31;1H~                                                                               [32;1H~                                                                               [33;1H~                                                                               [34;1H~                                                                               [35;1H~                                                                               [36;1H~                                                                               [37;1H~                                                                               [38;1H~                                                                               [39;1H~                                                                               [40;1H~                                                                               [41;1H~                                                                               [42;1H~                                                                               [43;1H~                                                                               [44;1H~                                                                               [45;1H~                                                                               [46;1H~                                                                               [47;1H~                                                                               [48;1H~                                                                               [m[49;63H1,1[11CAll"coverage.gcda" [noeol][converted] 3L, 315C[1;1H[?25h[?25l[49;53H^[[1;1H[49;53H  [1;1H[49;53H^[[1;1H[49;53H  [1;1H[?25h[?25l[49;53H:[1;1H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/coverage$ vim coverage.gcdals[Kvim coverage.gcda[K[Kno
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"coverage.gcno" [noeol][converted] 9L, 1995C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1Honcg*38A¿[1;10Hµ[34m<89>[m#[34m^A^@^@^@^@^@^@^A^N^@^@^@[mërp[34m^F[mÁ 3`[34m^Y[mMpy[34m^B^@^@^@[mmain[34m^@^@^@^@^@^@^@^^[2;1H@^C^@^@^@[mcoverage.c[34m^@^@[m3[34m^@^@^@^A^@^@^@[m:[34m^@^@^@^@^@[mA[34m^A^A^@^@^@[m    [34m^@^@^@^@^@[mC[34m^A^C^^[3;1H@^@^@^@^@^@^@^B^@^@^@^D^@^@^@^@^@[mC[34m^A^C^@^@^@^B^@^@^@^E^@^@^@^E^@^@^@^@^@[mC[34m^A^E^@^^[4;1H@^@^C^@^@^@^D^@^@^@^D^@^@^@^A^@^@^@^C^@^@^@^@^@[mC[34m^A^E^@^@^@^D^@^@^@^E^@^@^@^D^@^@@[5;1H^@^A^@^@^@^C^@^@^@^@^@[mC[34m^A^E^@^@^@^E^@^@^@^F^@^@^@^D^@^@^@^A^@^@^@^C^@^@^@^@^@[mC[34m^AA[6;1H^E^@^@^@^F^@^@^@^C^@^@^@^A^@^@^@^G^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^G^@^@^@^H^@^@^@^^[7;1HD^@^@^@^@^@[mC[34m^A^C^@^@^@^H^@^@^@^A^@^@^@^A^@^@^@^@^@[mE[34m^A
^@^@^@^B^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m3[34m^@^@^@[m6[34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^^[9;1HA[7C^@^@^@^C^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m7[34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[10;1H[34m^A[m      [34m^@^@^@^D^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m7[34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[11;1H[34m^A[m      [34m^@^@^@^E^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m6[34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[12;1H[34m^A[m      [34m^@^@^@^F^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m6[34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[13;1H[34m^A[m      [34m^@^@^@^G^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m9[34m^@^@^@^@^@^@^@^@^@^@^@^@^@^^[14;1H@^A^N^@^@^@[m%[34m<83>[mXv¼[14;20H}[34m<9e>[m÷[14;26Hø[14;27Hg6Â[34m^B^@^@^@[mcompute[34m^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^G^@@[15;1H^@^@^L^@^@^@[m0[34m^@^@^@^@^@[mA[34m^A^A^@^@^@^W^@^@^@^@^@[mC[34m^A^C^@^@^@^@^@^@^@^B^@^@^@^D^@^@^^[16;1H@^@^@[mC[34m^A^E^@^@^@^B^@^@^@^C^@^@^@^D^@^@^@^M^@^@^@^A^@^@^@^@^@[mC[34m^A^E^@^@^@^C^@^@^@^^[17;1HD^@^@^@^D^@^@^@^M^@^@^@^A^@^@^@^@^@[mC[34m^A^E^@^@^@^D^@^@^@^E^@^@^@^D^@^@^@[m  [34m^@^@^@^AA[18;1H^@^@^@^@^@[mC[34m^A^E^@^@^@^E^@^@^@^F^@^@^@^D^@^@^@^G^@^@^@^A^@^@^@^@^@[mC[34m^A^C^@^@^@^F^@@[19;1H^@^@^H^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^G^@^@^@^H^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^H^@^@@[20;1H^@^L^@^@^@^E^@^@^@^@^@[mC[34m^A^E^@^@^@[7C^@^@^@
^@^@^@^D^@^@^@^K^@^@^@^A^@^@^@^@^@[mC[34m^A^C^@^@^@
^@^@^@^L^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^K^@^@^@^L^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^L^@@[23;1H^@^@^U^@^@^@^E^@^@^@^@^@[mC[34m^A^E^@^@^@^M^@^@^@^N^@^@^@^D^@^@^@^R^@^@^@^A^@^@^@^@^@[mCC[24;1H[34m^A^E^@^@^@^N^@^@^@^O^@^@^@^D^@^@^@^P^@^@^@^A^@^@^@^@^@[mC[34m^A^C^@^@^@^O^@^@^@^Q^@^@^^[25;1H@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^P^@^@^@^Q^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^Q^@^@^@^U^@^@^@^^[26;1HE^@^@^@^@^@[mC[34m^A^E^@^@^@^R^@^@^@^S^@^@^@^D^@^@^@^T^@^@^@^A^@^@^@^@^@[mC[34m^A^C^@^@^@^S^^[27;1H@^@^@^U^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^T^@^@^@^U^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^U^@^^[28;1H@^@^V^@^@^@^E^@^@^@^@^@[mC[34m^A^C^@^@^@^V^@^@^@^A^@^@^@^A^@^@^@^@^@[mE[34m^A^K^@^@^@^B^@^@^^[29;1H@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^G^@^@^@^H^@^@^@[m [34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m    [30;1H[34m^@^@^@^C^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m    [34m^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m    [31;1H[34m^@^@^@^D^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@
^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A
^@^@^@^E^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^K^@^@^@^L^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[34;1HE[34m^A[m     [34m^@^@^@^F^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^M^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[35;1HE[34m^A[m     [34m^@^@^@^G^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^P^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[36;1HE[34m^A
^@^@^@[m  [34m^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^T^@^@^@^U^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[38;1HE[34m^A[m     [34m^@^@^@
^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^V^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m     [34m^@^@^@^KK[40;1H^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^Y^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m     [34m^@^@^@^LL[41;1H^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@
^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m   [34m^@^@^@^M^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^^^@@[43;1H^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m     [34m^@^@^@^N^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@^_^@@[44;1H^@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m     [34m^@^@^@^O^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m [34m^@^^[45;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m      [34m^@^@^@^P^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m#[34m^@^^[46;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m      [34m^@^@^@^R^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m'[34m^@^^[47;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m      [34m^@^@^@^S^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m([34m^@^^[48;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[34m^A[m      [34m^@^@^@^T^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[34m^@^@[m+[34m^@^[m[48;1H[94m@@@                                                                             [m[49;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1Honcg*38A¿[1;10Hµ[38;5;81m<89>[m#[38;5;81m^A^@^@^@^@^@^@^A^N^@^@^@[mërp[38;5;81m^F[mÁ 3`[38;5;81m^Y[mMpy[38;5;81m^B^@^@^@[mmain[38;5;81m^@^@^@^@^@^@^@^^[2;1H@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m3[38;5;81m^@^@^@^A^@^@^@[m:[38;5;81m^@^@^@^@^@[mA[38;5;81m^A^A^@^@^@[m    [38;5;81m^@^@^@^@^@[mC[38;5;81m^A^C^^[3;1H@^@^@^@^@^@^@^B^@^@^@^D^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^B^@^@^@^E^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^E^@^^[4;1H@^@^C^@^@^@^D^@^@^@^D^@^@^@^A^@^@^@^C^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^D^@^@^@^E^@^@^@^D^@^@@[5;1H^@^A^@^@^@^C^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^E^@^@^@^F^@^@^@^D^@^@^@^A^@^@^@^C^@^@^@^@^@[mC[38;5;81m^AA[6;1H^E^@^@^@^F^@^@^@^C^@^@^@^A^@^@^@^G^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^G^@^@^@^H^@^@^@^^[7;1HD^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^H^@^@^@^A^@^@^@^A^@^@^@^@^@[mE[38;5;81m^A
^@^@^@^B^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m3[38;5;81m^@^@^@[m6[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^^[9;1HA[7C^@^@^@^C^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m7[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[10;1H[38;5;81m^A[m      [38;5;81m^@^@^@^D^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m7[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[11;1H[38;5;81m^A[m      [38;5;81m^@^@^@^E^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m6[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[12;1H[38;5;81m^A[m      [38;5;81m^@^@^@^F^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m6[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mEE[13;1H[38;5;81m^A[m      [38;5;81m^@^@^@^G^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m9[38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@^^[14;1H@^A^N^@^@^@[m%[38;5;81m<83>[mXv¼[14;20H}[38;5;81m<9e>[m÷[14;26Hø[14;27Hg6Â[38;5;81m^B^@^@^@[mcompute[38;5;81m^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^G^@@[15;1H^@^@^L^@^@^@[m0[38;5;81m^@^@^@^@^@[mA[38;5;81m^A^A^@^@^@^W^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^@^@^@^@^B^@^@^@^D^@^@^^[16;1H@^@^@[mC[38;5;81m^A^E^@^@^@^B^@^@^@^C^@^@^@^D^@^@^@^M^@^@^@^A^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^C^@^@^@^^[17;1HD^@^@^@^D^@^@^@^M^@^@^@^A^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^D^@^@^@^E^@^@^@^D^@^@^@[m  [38;5;81m^@^@^@^AA[18;1H^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^E^@^@^@^F^@^@^@^D^@^@^@^G^@^@^@^A^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^F^@@[19;1H^@^@^H^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^G^@^@^@^H^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^H^@^@@[20;1H^@^L^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@[7C^@^@^@
^@^@^@^D^@^@^@^K^@^@^@^A^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@
^@^@^@^L^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^K^@^@^@^L^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^L^@@[23;1H^@^@^U^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^M^@^@^@^N^@^@^@^D^@^@^@^R^@^@^@^A^@^@^@^@^@[mCC[24;1H[38;5;81m^A^E^@^@^@^N^@^@^@^O^@^@^@^D^@^@^@^P^@^@^@^A^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^O^@^@^@^Q^@^@^^[25;1H@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^P^@^@^@^Q^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^Q^@^@^@^U^@^@^@^^[26;1HE^@^@^@^@^@[mC[38;5;81m^A^E^@^@^@^R^@^@^@^S^@^@^@^D^@^@^@^T^@^@^@^A^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^S^^[27;1H@^@^@^U^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^T^@^@^@^U^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^U^@^^[28;1H@^@^V^@^@^@^E^@^@^@^@^@[mC[38;5;81m^A^C^@^@^@^V^@^@^@^A^@^@^@^A^@^@^@^@^@[mE[38;5;81m^A^K^@^@^@^B^@^@^^[29;1H@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^G^@^@^@^H^@^@^@[m [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m    [30;1H[38;5;81m^@^@^@^C^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m    [38;5;81m^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m    [31;1H[38;5;81m^@^@^@^D^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@
^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A
^@^@^@^E^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^K^@^@^@^L^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[34;1HE[38;5;81m^A[m     [38;5;81m^@^@^@^F^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^M^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[35;1HE[38;5;81m^A[m     [38;5;81m^@^@^@^G^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^P^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[36;1HE[38;5;81m^A
^@^@^@[m  [38;5;81m^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^T^@^@^@^U^@^@^@^@^@^@^@^@^@^@^@^@^@@[m[38;1HE[38;5;81m^A[m     [38;5;81m^@^@^@
^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^V^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m     [38;5;81m^@^@^@^KK[40;1H^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^Y^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m     [38;5;81m^@^@^@^LL[41;1H^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@
^@^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m   [38;5;81m^@^@^@^M^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^^^@@[43;1H^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m     [38;5;81m^@^@^@^N^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@^_^@@[44;1H^@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m     [38;5;81m^@^@^@^O^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m [38;5;81m^@^^[45;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m      [38;5;81m^@^@^@^P^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m#[38;5;81m^@^^[46;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m      [38;5;81m^@^@^@^R^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m'[38;5;81m^@^^[47;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m      [38;5;81m^@^@^@^S^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m([38;5;81m^@^^[48;1H@^@^@^@^@^@^@^@^@^@^@^@[mE[38;5;81m^A[m      [38;5;81m^@^@^@^T^@^@^@^@^@^@^@^C^@^@^@[mcoverage.c[38;5;81m^@^@[m+[38;5;81m^@^[m[48;1H[94m@@@                                                                             [m[49;63H1,1[11CTop"coverage.gcno" [noeol][converted] 9L, 1995C[1;1H[?25h[?25l[49;53H:[1;1H[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/coverage$ gcov coverage.da[K[Kgada
File 'coverage.c'
Lines executed:12.50% of 24
Creating 'coverage.c.gcov'

qxiong1@remote04:~/i220b/work/lab11/coverage$ ls
coverage  coverage.c  coverage.c.gcov  coverage.gcda  coverage.gcno  Makefile
qxiong1@remote04:~/i220b/work/lab11/coverage$ vim coverage.c.gcov 
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"coverage.c.gcov" 63L, 1864C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:2[5;9H-:    0:Programs:1[6;9H-:    1:#include <stdio.h>[7;9H-:    2:[8;9H-:    3:static int v[] = {[9;9H-:    4:  211,  333, 319, 411, 911, 1001,[10;9H-:    5:};[11;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];
    #####:    9:  if (v[0] < a && a < v[1]) {
    #####:   10:    if (b < v[2]) {
    #####:   11:      s += v[2];
    #####:   12:      if (c < v[3]) {
    #####:   13:[8Cs += v[4];[19;9H-:   14:      }[20;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[22;9H-:   17:      }[23;9H-:   18:    }[24;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[28;9H-:   23:      }[29;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[31;9H-:   26:      }[32;9H-:   27:    }[33;9H-:   28:  }[34;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[38;9H-:   33:      }[39;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[41;9H-:   36:      }[42;9H-:   37:    }[43;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[46;9H-:   41:      }[47;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[49;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;9H-:    0:Source:coverage.c[2;9H-:    0:Graph:coverage.gcno[3;9H-:    0:Data:coverage.gcda[4;9H-:    0:Runs:2[5;9H-:    0:Programs:1[6;9H-:    1:#include <stdio.h>[7;9H-:    2:[8;9H-:    3:static int v[] = {[9;9H-:    4:  211,  333, 319, 411, 911, 1001,[10;9H-:    5:};[11;9H-:    6:
    #####:    7:static int compute(int a, int b, int c) {
    #####:    8:  int s = v[2];
    #####:    9:  if (v[0] < a && a < v[1]) {
    #####:   10:    if (b < v[2]) {
    #####:   11:      s += v[2];
    #####:   12:      if (c < v[3]) {
    #####:   13:[8Cs += v[4];[19;9H-:   14:      }[20;9H-:   15:      else {
    #####:   16:[8Cs += v[3];[22;9H-:   17:      }[23;9H-:   18:    }[24;9H-:   19:    else {
    #####:   20:      s += v[1];
    #####:   21:      if (c < v[1]) {
    #####:   22:[8Cs += v[4];[28;9H-:   23:      }[29;9H-:   24:      else {
    #####:   25:[8Cs += v[2];[31;9H-:   26:      }[32;9H-:   27:    }[33;9H-:   28:  }[34;9H-:   29:  else {
    #####:   30:    if (b < v[3]) {
    #####:   31:      if (c < v[4]) {
    #####:   32:[8Cs += v[5];[38;9H-:   33:      }[39;9H-:   34:      else {
    #####:   35:[8Cs += v[1];[41;9H-:   36:      }[42;9H-:   37:    }[43;9H-:   38:    else {
    #####:   39:      if (c < v[2]) {
    #####:   40:[8Cs += v[1];[46;9H-:   41:      }[47;9H-:   42:      else {
    #####:   43:[8Cs += v[3];[49;63H1,1[11CTop"coverage.c.gcov" 63L, 1864C[1;1H[?25h[?25l[49;63H43,26[43;26H[?25h[?25l[49;53H~@k[43;26H[49;53H   [43;37H[1;48r[48;1H
[1;49r[43;37H[46m{[45;23H}[m[48;9H-:   44:      }[49;1H[K[49;63H44,37[10C6%[43;37H[?25h[?25l[49;53H~@k[43;37H[49;53H   [43;34H[1;48r[48;1H
[1;49r[42;37H{[44;23H}[48;9H-:   45:    }[49;63H[K[49;63H45,27-34      13%[43;34H[?25h[?25l[49;53H~@k[43;34H[49;53H   [43;23H[1;48r[48;1H
[1;49r[41;37H[46m{[43;23H}[m[48;9H-:   46:  }[49;63H[K[49;63H46,23[9C20%[43;23H[?25h[?25l[49;53H~@k[43;23H[49;53H   [43;28H[1;48r[48;1H
[1;49r[40;37H{[42;23H}[43;28H[46m{[45;23H}[m[48;5H#####:   47:  return s;[49;63H[K[49;63H47,28[9C26%[43;28H[?25h[?25l[49;53H~@k[43;28H[49;53H   [43;34H[1;48r[48;1H
[1;49r[42;28H{[44;23H}[48;9H-:   48:}[49;63H[K[49;63H48,27-34      33%[43;34H[?25h[?25l[49;53H~@k[43;34H[49;53H   [43;23H[1;48r[48;1H
[1;49r[41;28H[46m{[43;23H}[m[48;9H-:   49:[49;63H[K[49;63H49,23[9C40%[43;23H[?25h[?25l[49;53H~@k[43;23H[49;53H   [43;21H[1;48r[48;1H
[1;49r[36;26H[46m{[m[40;28H{[42;23H}[43;21H[46m}[m[48;9H-:   50:int[49;63H[K[49;63H50,21[9C46%[43;21H[?25h[?25l[49;53H~@k[43;21H[49;53H   [43;19H[1;48r[48;1H
[1;49r[26;24H[46m{[m[35;26H{[42;21H}[43;19H[46m}[m[48;9H2:   51:main()[49;63H[K[49;63H51,19[9C53%[43;19H[?25h[?25l[49;53H~@k[43;19H[49;53H   [43;27H[1;48r[48;1H
[1;49r[25;24H{[42;19H}[48;9H-:   52:{[49;63H[K[49;63H52,27[9C60%[43;27H[?25h[?25l[49;53H~@k[43;27H[49;53H   [43;17H[1;48r[48;1H
[1;49r[2;57H[46m{[43;17H}[m[48;9H-:   53:  int a, b, c;[49;63H[K[49;63H53,17[9C66%[43;17H[?25h[?25l[49;53H~@k[43;17H[49;53H   [43;16H[1;48r[48;1H
[1;49r[1;57H{[42;17H}[48;9H2:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {[49;63H[K[49;63H54,16[9C73%[43;16H[?25h[?25l[49;53H~@k[43;16H[49;53H   [42;20H[1;48r[1;1H[2M[1;49r[47;5H#####:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b,  [48;1Hc));[49;63H[K[49;63H55,20[9C81%[42;20H[?25h[?25l[49;53H~@k[42;20H[49;53H   [43;22H[46m()[m[49;64H6,22[43;22H[?25h[?25l[49;53H~@k[43;22H[49;53H   [43;17H[1;48r[48;1H
[1;49r[42;21H()[48;9H-:   56:  }[49;63H[K[49;63H57,17[9C87%[43;17H[?25h[?25l[49;53H~@k[43;17H[49;53H   [43;30H[1;48r[48;1H
[1;49r[48;9H2:   57:  return 0;[49;63H[K[49;63H58,30[9C93%[43;30H[?25h[?25l[49;53H~@k[43;30H[49;53H   [43;44H[1;48r[48;1H
[1;49r[48;9H-:   58:}[49;63H[K[49;63H59,44[9CBot[43;44H[?25h[?25l[49;53H~@k[43;44H[49;53H   [44;44H[49;63H60[44;44H[?25h[?25l[49;53H~@k[44;44H[49;53H   [46;19H[43;62H[46m{[46;19H}[m[49;64H1,19[46;19H[?25h[?25l[49;53H~@k[46;19H[49;53H   [47;27H[43;62H{[46;19H}[49;64H2,27[47;27H[?25h[?25l[49;53H~@k[47;27H[49;53H   [48;17H[41;17H[46m{[48;17H}[m[49;64H3,1[48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [48;17H[?25h[?25l[49;53H~@k[48;17H[49;53H   [47;27H[41;17H{[48;17H}[49;64H2,2[47;27H[?25h[?25l[49;53H~@k[47;27H[49;53H   [46;19H[43;62H[46m{[46;19H}[m[49;64H1,19[46;19H[?25h[?25l[49;53H~@k[46;19H[49;53H   [44;44H[43;62H{[46;19H}[49;64H0,44[44;44H[?25h[?25l[49;53H~@k[44;44H[49;53H   [43;44H[49;63H59[43;44H[?25h[?25l[49;53H~@k[43;44H[49;53H   [42;30H[49;64H8,30[42;30H[?25h[?25l[49;53H~@k[42;30H[49;53H   [41;17H[46m{[48;17H}[m[49;64H7,17[41;17H[?25h[?25l[49;53H~@k[41;17H[49;53H   [40;22H[46m()[m[41;17H{[48;17H}[49;64H6,22[40;22H[?25h[?25l[49;53H~@k[40;22H[49;53H   [39;20H[40;21H()[49;64H5,20[39;20H[?25h[?25l[49;53H~@k[39;20H[49;53H   [38;16H[49;64H4,16[38;16H[?25h[?25l[49;53H~@k[38;16H[49;53H   [37;17H[49;64H3,17[37;17H[?25h[?25l[49;53H~@k[37;17H[49;53H   [36;27H[49;64H2,2[36;27H[?25h[?25l[49;53H~@k[36;27H[49;53H   [35;19H[18;24H[46m{[35;19H}[m[49;64H1,19[35;19H[?25h[?25l[49;53H:[35;19H[49;53H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/coverage$ ./gov[K[Kcov
bash: ./gcov: No such file or directory
qxiong1@remote04:~/i220b/work/lab11/coverage$ gcov
Usage: gcov [OPTION...] SOURCE|OBJ...

Print code coverage information.

  -a, --all-blocks                Show information for every basic block
  -b, --branch-probabilities      Include branch probabilities in output
  -c, --branch-counts             Output counts of branches taken
                                    rather than percentages
  -d, --display-progress          Display progress information
  -f, --function-summaries        Output summaries for each function
  -h, --help                      Print this help, then exit
  -i, --intermediate-format       Output .gcov file in intermediate text format
  -j, --human-readable            Output human readable numbers
  -k, --use-colors                Emit colored output
  -l, --long-file-names           Use long output file names for included
                                    source files
  -m, --demangled-names           Output demangled function names
  -n, --no-output                 Do not create an output file
  -o, --object-directory DIR|FILE Search for object files in DIR or called FILE
  -p, --preserve-paths            Preserve all pathname components
  -r, --relative-only             Only show data for relative sources
  -s, --source-prefix DIR         Source prefix to elide
  -u, --unconditional-branches    Show unconditional branch counts too
  -v, --version                   Print version number, then exit
  -w, --verbose                   Print verbose informations
  -x, --hash-filenames            Hash long pathnames

For bug reporting instructions, please see:
<file:///usr/share/doc/gcc-8/README.Bugs>.
qxiong1@remote04:~/i220b/work/lab11/coverage$ c[Kvim coverage.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"coverage.c" 58L, 781C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdio.h>[m

[32mstatic[m [32mint[m v[] = {
  [31m211[m,  [31m333[m, [31m319[m, [31m411[m, [31m911[m, [31m1001[m,
};

[32mstatic[m [32mint[m compute([32mint[m a, [32mint[m b, [32mint[m c) {
  [32mint[m s = v[[31m2[m];
  [38;5;130mif[m (v[[31m0[m] < a && a < v[[31m1[m]) {
    [38;5;130mif[m (b < v[[31m2[m]) {[11;7Hs += v[[31m2[m];[12;7H[38;5;130mif[m (c < v[[31m3[m]) {[13;9Hs += v[[31m4[m];[14;7H}[15;7H[38;5;130melse[m {[16;9Hs += v[[31m3[m];[17;7H}
    }
    [38;5;130melse[m {[20;7Hs += v[[31m1[m];[21;7H[38;5;130mif[m (c < v[[31m1[m]) {[22;9Hs += v[[31m4[m];[23;7H}[24;7H[38;5;130melse[m {[25;9Hs += v[[31m2[m];[26;7H}
    }
  }
  [38;5;130melse[m {
    [38;5;130mif[m (b < v[[31m3[m]) {[31;7H[38;5;130mif[m (c < v[[31m4[m]) {[32;9Hs += v[[31m5[m];[33;7H}[34;7H[38;5;130melse[m {[35;9Hs += v[[31m1[m];[36;7H}
    }
    [38;5;130melse[m {[39;7H[38;5;130mif[m (c < v[[31m2[m]) {[40;9Hs += v[[31m1[m];[41;7H}[42;7H[38;5;130melse[m {[43;9Hs += v[[31m3[m];[44;7H}
    }
  }
  [38;5;130mreturn[m s;
}[49;63H1,1[11CTop[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?1000l[?1006h[?1002h[?1006l[?1002l[?1006h[?1002h[27m[23m[29m[m[H[2J[?25l[1;1H[38;5;81m#include [m[95m<stdio.h>[m

[38;5;121mstatic[m [38;5;121mint[m v[] = {
  [95m211[m,  [95m333[m, [95m319[m, [95m411[m, [95m911[m, [95m1001[m,
};

[38;5;121mstatic[m [38;5;121mint[m compute([38;5;121mint[m a, [38;5;121mint[m b, [38;5;121mint[m c) {
  [38;5;121mint[m s = v[[95m2[m];
  [93mif[m (v[[95m0[m] < a && a < v[[95m1[m]) {
    [93mif[m (b < v[[95m2[m]) {[11;7Hs += v[[95m2[m];[12;7H[93mif[m (c < v[[95m3[m]) {[13;9Hs += v[[95m4[m];[14;7H}[15;7H[93melse[m {[16;9Hs += v[[95m3[m];[17;7H}
    }
    [93melse[m {[20;7Hs += v[[95m1[m];[21;7H[93mif[m (c < v[[95m1[m]) {[22;9Hs += v[[95m4[m];[23;7H}[24;7H[93melse[m {[25;9Hs += v[[95m2[m];[26;7H}
    }
  }
  [93melse[m {
    [93mif[m (b < v[[95m3[m]) {[31;7H[93mif[m (c < v[[95m4[m]) {[32;9Hs += v[[95m5[m];[33;7H}[34;7H[93melse[m {[35;9Hs += v[[95m1[m];[36;7H}
    }
    [93melse[m {[39;7H[93mif[m (c < v[[95m2[m]) {[40;9Hs += v[[95m1[m];[41;7H}[42;7H[93melse[m {[43;9Hs += v[[95m3[m];[44;7H}
    }
  }
  [93mreturn[m s;
}[49;63H1,1[11CTop"coverage.c" 58L, 781C[1;1H[?25h[?25l[30;19H[46m{[37;5H}[m[49;63H37,5[37;5H[?25h[?25l[49;53H~@k[37;5H[49;53H   [38;10H[30;19H{[37;5H}[38;10H[46m{[45;5H}[m[49;64H8,10[38;10H[?25h[?25l[49;53H~@k[38;10H[49;53H   [39;21H[38;10H{[39;21H[46m{[41;7H}[m[45;5H}[49;64H9,21[39;21H[?25h[?25l[49;53H~@k[39;21H[49;53H   [40;18H[39;21H{[41;7H}[49;63H40,11-18[40;18H[?25h[?25l[49;53H~@k[40;18H[49;53H   [41;7H[39;21H[46m{[41;7H}[m[49;64H1,7    [41;7H[?25h[?25l[49;53H~@k[41;7H[49;53H   [42;12H[39;21H{[41;7H}[42;12H[46m{[44;7H}[m[49;64H2,12[42;12H[?25h[?25l[49;53H~@k[42;12H[49;53H   [43;18H[42;12H{[44;7H}[49;64H3,11-18[43;18H[?25h[?25l[49;53H~@k[43;18H[49;53H   [43;7H[1;48r[48;1H
[1;49r[41;12H[46m{[43;7H}[m[49;1H[K[49;63H44,7[10C10%[43;7H[?25h[?25l[49;53H~@k[43;7H[49;53H   [43;5H[1;48r[48;1H
[1;49r[36;10H[46m{[m[40;12H{[42;7H}
    [46m}[m[48;1H[38;5;121mint[m[49;63H[K[49;63H45,5[10C20%[43;5H[?25h[?25l[49;53H~@k[43;5H[49;53H   [43;3H[1;48r[48;1H
[1;49r[26;8H[46m{[m[35;10H{[42;5H}
  [46m}[m[48;1Hmain()[49;63H[K[49;63H46,3[10C30%[43;3H[?25h[?25l[49;53H~@k[43;3H[49;53H   [43;11H[1;48r[48;1H
[1;49r[25;8H{[42;3H}[48;1H{[49;63H[K[49;63H47,11[9C40%[43;11H[?25h[?25l[49;53H~@k[43;11H[49;53H   [43;1H[1;48r[48;1H
[1;49r[2;41H[46m{[43;1H}[m[48;3H[38;5;121mint[m a, b, c;[49;63H[K[49;63H48,1[10C50%[43;1H[?25h[?25l[49;53H~@k[43;1H[49;53H   [43;1H[1;48r[48;1H
[1;49r[1;41H{[42;1H}[48;3H[93mwhile[m (scanf([95m"[m[38;5;224m%d[m[95m [m[38;5;224m%d[m[95m [m[38;5;224m%d[m[95m"[m, &a, &b, &c) == [95m3[m) {[49;63H[K[49;63H49,0-1[8C60%[43;1H[?25h[?25l[49;53H~@k[43;1H[49;53H   [43;4H[1;48r[48;1H
[1;49r[48;5Hprintf([95m"compute([m[38;5;224m%d[m[95m, [m[38;5;224m%d[m[95m, [m[38;5;224m%d[m[95m) = [m[38;5;224m%d\n[m[95m"[m, a, b, c, compute(a, b, c));[49;63H[K[49;63H50,4[10C70%[43;4H[?25h[?25l[49;53H~@k[43;4H[49;53H   [43;6H[1;48r[48;1H
[1;49r[43;5H[46m()[m[48;3H}[49;63H[K[49;63H51,6[10C80%[43;6H[?25h[?25l[49;53H~@k[43;6H[49;53H   [43;1H[1;48r[48;1H
[1;49r[42;5H()[48;3H[93mreturn[m [95m0[m;[49;63H[K[49;63H52,1[10C90%[43;1H[?25h[?25l[49;53H~@k[43;1H[49;53H   [43;14H[1;48r[48;1H
[1;49r[48;1H}[49;63H[K[49;63H53,14[9CBot[43;14H[?25h[?25l[49;53H~@k[43;14H[49;53H   [44;27H[49;64H4,27[44;27H[?25h[?25l[49;53H~@k[44;27H[49;53H   [45;27H[49;64H5[45;27H[?25h[?25l[49;53H~@k[45;27H[49;53H   [46;3H[44;46H[46m{

[m  [46m}[m[49;64H6,3 [46;3H[?25h[?25l[49;53H~@k[46;3H[49;53H   [47;11H[44;46H{

  }[49;64H7,11[47;11H[?25h[?25l[49;53H~@k[47;11H[49;53H   [48;1H[42;1H[46m{[48;1H}[m[49;64H8,1 [48;1H[?25h[?25l[49;53H~@k[48;1H[49;53H   [48;1H[?25h[?25l[49;53H~@k[48;1H[49;53H   [48;1H[?25h[?25l[49;53H~@k[48;1H[49;53H   [48;1H[?25h[?25l[49;53H~@k[48;1H[49;53H   [47;11H[42;1H{[48;1H}[49;64H7,11[47;11H[?25h[?25l[49;53H~@k[47;11H[49;53H   [46;3H[44;46H[46m{

[m  [46m}[m[49;64H6,3 [46;3H[?25h[?25l[49;53H~@k[46;3H[49;53H   [45;27H[44;46H{

  }[49;64H5,27[45;27H[?25h[?25l[49;53H~@k[45;27H[49;53H   [44;27H[49;64H4[44;27H[?25h[?25l[49;53H:[44;27H[49;53H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?1006l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tqxiong1@remote04:~/i220b/work/lab11/coverage$ ls
coverage  coverage.c  coverage.c.gcov  coverage.gcda  coverage.gcno  Makefile
qxiong1@remote04:~/i220b/work/lab11/coverage$ make
make: 'coverage' is up to date.
qxiong1@remote04:~/i220b/work/lab11/coverage$ ./coverage 100 200 300
^C
qxiong1@remote04:~/i220b/work/lab11/coverage$ exit

Script done on 2019-10-31 16:43:39-04:00 [COMMAND_EXIT_CODE="130"]
